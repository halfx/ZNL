//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//
//     Creater: Administrator
//     Date:    2015/1/27
//     Time:    16:36
//     Version: 4.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

/// <summary>
/// CodeSmith自动生成的实体
/// </summary>
namespace ZNLCRM.Entity.DBModel
{
    using System;
    using MySoft.Data;
    using ZNLCRM.Utility;
    using ZNLFrame.Entity;
    /// <summary>
    /// 表名：HR_Department 主键列：DeptID
    /// </summary>
    [SerializableAttribute()]
    public partial class HR_Department : BaseEntity
    {
        #region Private Properties

        private Int32 _DeptID;
        private Int32? _OrgID;
        private Guid? _OrgGuID;
        private Guid? _GCompanyID;
        private String _DeptNo;
        private String _DeptName;
        private Int32? _ParentID;
        private String _ParentIDPath;
        private Int32? _ManagerEmpID;
        private String _ManagerEmpName;
        private Int32? _IsActive;
        private Boolean? _IsDeleted;

        #endregion

        #region Public Properties

        /// <summary>
        /// 部门ID.
        /// </summary>
        public Int32 DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                this.OnPropertyValueChange(_.DeptID, _DeptID, value);
                this._DeptID = value;
            }
        }

        /// <summary>
        /// 机构ID.
        /// </summary>
        public Int32? OrgID
        {
            get
            {
                return this._OrgID;
            }
            set
            {
                this.OnPropertyValueChange(_.OrgID, _OrgID, value);
                this._OrgID = value;
            }
        }

        /// <summary>
        /// 机构GUID.
        /// </summary>
        public Guid? OrgGuID
        {
            get
            {
                return this._OrgGuID;
            }
            set
            {
                this.OnPropertyValueChange(_.OrgGuID, _OrgGuID, value);
                this._OrgGuID = value;
            }
        }

        /// <summary>
        /// 注册公司ID.
        /// </summary>
        public Guid? GCompanyID
        {
            get
            {
                return this._GCompanyID;
            }
            set
            {
                this.OnPropertyValueChange(_.GCompanyID, _GCompanyID, value);
                this._GCompanyID = value;
            }
        }

        /// <summary>
        /// 部门编号.
        /// </summary>
        public String DeptNo
        {
            get
            {
                return this._DeptNo;
            }
            set
            {
                this.OnPropertyValueChange(_.DeptNo, _DeptNo, value);
                this._DeptNo = value.SubStr(20);
            }
        }

        /// <summary>
        ///  部门名称.
        /// </summary>
        public String DeptName
        {
            get
            {
                return this._DeptName;
            }
            set
            {
                this.OnPropertyValueChange(_.DeptName, _DeptName, value);
                this._DeptName = value.SubStr(100);
            }
        }

        /// <summary>
        /// 上级部门ID.
        /// </summary>
        public Int32? ParentID
        {
            get
            {
                return this._ParentID;
            }
            set
            {
                this.OnPropertyValueChange(_.ParentID, _ParentID, value);
                this._ParentID = value;
            }
        }

        /// <summary>
        /// 部门上级节点ID路径,形如："1,3,20,102".
        /// </summary>
        public String ParentIDPath
        {
            get
            {
                return this._ParentIDPath;
            }
            set
            {
                this.OnPropertyValueChange(_.ParentIDPath, _ParentIDPath, value);
                this._ParentIDPath = value.SubStr(200);
            }
        }

        /// <summary>
        /// 部门负责人ID（关联到员工表）.
        /// </summary>
        public Int32? ManagerEmpID
        {
            get
            {
                return this._ManagerEmpID;
            }
            set
            {
                this.OnPropertyValueChange(_.ManagerEmpID, _ManagerEmpID, value);
                this._ManagerEmpID = value;
            }
        }

        /// <summary>
        /// 部门负责人Name（关联到员工表）.
        /// </summary>
        public String ManagerEmpName
        {
            get
            {
                return this._ManagerEmpName;
            }
            set
            {
                this.OnPropertyValueChange(_.ManagerEmpName, _ManagerEmpName, value);
                this._ManagerEmpName = value.SubStr(50);
            }
        }

        /// <summary>
        /// 是否启用(1:禁用，2:启用，4:删除)（若不启用则在组织机构树中不可见）.
        /// </summary>
        public Int32? IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                this.OnPropertyValueChange(_.IsActive, _IsActive, value);
                this._IsActive = value;
            }
        }

        /// <summary>
        /// 删除标志(0:正常;1:已删除).
        /// </summary>
        public Boolean? IsDeleted
        {
            get
            {
                return this._IsDeleted;
            }
            set
            {
                this.OnPropertyValueChange(_.IsDeleted, _IsDeleted, value);
                this._IsDeleted = value;
            }
        }

        #endregion
        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override Table GetTable()
        {
            return new Table<HR_Department>("HR_Department");
        }

        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override Field GetIdentityField()
        {
            return _.DeptID;
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.DeptID
			};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override Field[] GetFields()
        {
            return new Field[] {
				_.DeptID,		
				_.OrgID,		
				_.OrgGuID,		
				_.GCompanyID,		
				_.DeptNo,		
				_.DeptName,		
				_.ParentID,		
				_.ParentIDPath,		
				_.ManagerEmpID,		
				_.ManagerEmpName,		
				_.IsActive,		
				_.IsDeleted		
			};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
				this._DeptID,		
				this._OrgID,		
				this._OrgGuID,		
				this._GCompanyID,		
				this._DeptNo,		
				this._DeptName,		
				this._ParentID,		
				this._ParentIDPath,		
				this._ManagerEmpID,		
				this._ManagerEmpName,		
				this._IsActive,		
				this._IsDeleted		
			};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.DeptID)))
            {
                this._DeptID = reader.GetInt32(_.DeptID);
            }
            if ((false == reader.IsDBNull(_.OrgID)))
            {
                this._OrgID = reader.GetInt32(_.OrgID);
            }
            if ((false == reader.IsDBNull(_.OrgGuID)))
            {
                this._OrgGuID = reader.GetGuid(_.OrgGuID);
            }
            if ((false == reader.IsDBNull(_.GCompanyID)))
            {
                this._GCompanyID = reader.GetGuid(_.GCompanyID);
            }
            if ((false == reader.IsDBNull(_.DeptNo)))
            {
                this._DeptNo = reader.GetString(_.DeptNo);
            }
            if ((false == reader.IsDBNull(_.DeptName)))
            {
                this._DeptName = reader.GetString(_.DeptName);
            }
            if ((false == reader.IsDBNull(_.ParentID)))
            {
                this._ParentID = reader.GetInt32(_.ParentID);
            }
            if ((false == reader.IsDBNull(_.ParentIDPath)))
            {
                this._ParentIDPath = reader.GetString(_.ParentIDPath);
            }
            if ((false == reader.IsDBNull(_.ManagerEmpID)))
            {
                this._ManagerEmpID = reader.GetInt32(_.ManagerEmpID);
            }
            if ((false == reader.IsDBNull(_.ManagerEmpName)))
            {
                this._ManagerEmpName = reader.GetString(_.ManagerEmpName);
            }
            if ((false == reader.IsDBNull(_.IsActive)))
            {
                this._IsActive = reader.GetInt32(_.IsActive);
            }
            if ((false == reader.IsDBNull(_.IsDeleted)))
            {
                this._IsDeleted = reader.GetBoolean(_.IsDeleted);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(HR_Department).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static AllField All = new AllField<HR_Department>();

            /// <summary>
            /// 部门ID - 字段名：DeptID - 数据类型：Int32?
            /// </summary>
            public static Field DeptID = new Field<HR_Department>("DeptID");
            /// <summary>
            /// 机构ID - 字段名：OrgID - 数据类型：Int32?
            /// </summary>
            public static Field OrgID = new Field<HR_Department>("OrgID");
            /// <summary>
            /// 机构GUID - 字段名：OrgGuID - 数据类型：Guid?
            /// </summary>
            public static Field OrgGuID = new Field<HR_Department>("OrgGuID");
            /// <summary>
            /// 注册公司ID - 字段名：GCompanyID - 数据类型：Guid?
            /// </summary>
            public static Field GCompanyID = new Field<HR_Department>("GCompanyID");
            /// <summary>
            /// 部门编号 - 字段名：DeptNo - 数据类型：String
            /// </summary>
            public static Field DeptNo = new Field<HR_Department>("DeptNo");
            /// <summary>
            ///  部门名称 - 字段名：DeptName - 数据类型：String
            /// </summary>
            public static Field DeptName = new Field<HR_Department>("DeptName");
            /// <summary>
            /// 上级部门ID - 字段名：ParentID - 数据类型：Int32?
            /// </summary>
            public static Field ParentID = new Field<HR_Department>("ParentID");
            /// <summary>
            /// 部门上级节点ID路径,形如："1,3,20,102" - 字段名：ParentIDPath - 数据类型：String
            /// </summary>
            public static Field ParentIDPath = new Field<HR_Department>("ParentIDPath");
            /// <summary>
            /// 部门负责人ID（关联到员工表） - 字段名：ManagerEmpID - 数据类型：Int32?
            /// </summary>
            public static Field ManagerEmpID = new Field<HR_Department>("ManagerEmpID");
            /// <summary>
            /// 部门负责人Name（关联到员工表） - 字段名：ManagerEmpName - 数据类型：String
            /// </summary>
            public static Field ManagerEmpName = new Field<HR_Department>("ManagerEmpName");
            /// <summary>
            /// 是否启用(1:禁用，2:启用，4:删除)（若不启用则在组织机构树中不可见） - 字段名：IsActive - 数据类型：Int32?
            /// </summary>
            public static Field IsActive = new Field<HR_Department>("IsActive");
            /// <summary>
            /// 删除标志(0:正常;1:已删除) - 字段名：IsDeleted - 数据类型：Boolean?
            /// </summary>
            public static Field IsDeleted = new Field<HR_Department>("IsDeleted");
        }
    }
}
