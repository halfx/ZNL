//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//
//     Creater: Administrator
//     Date:    2015/1/27
//     Time:    15:31
//     Version: 4.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

/// <summary>
/// CodeSmith自动生成的实体
/// </summary>
namespace ZNLCRM.Entity.DBModel
{
    using System;
    using MySoft.Data;
    using ZNLCRM.Utility;
    using ZNLFrame.Entity;
    /// <summary>
    /// 表名：HR_Employee 主键列：EmpID
    /// </summary>
    [SerializableAttribute()]
    public partial class HR_Employee : BaseEntity
    {
        #region Private Properties

        private Int32 _EmpID;
        private Guid? _EmpGuid;
        private Guid? _GCompanyID;
        private Int32? _OrgID;
        private Int32? _DeptID;
        private String _EmpCode;
        private String _EmpName;
        private String _BillCode;
        private String _IdentityCardNo;
        private Int32? _Sex;
        private DateTime? _Birthday;
        private Int32? _PositionID;
        private Int32? _ManagerEmpID;
        private String _SocialSecurityNo;
        private DateTime? _JoinTime;
        private DateTime? _QuitTime;
        private String _Telephone;
        private String _Mobile;
        private String _Email;
        private String _Nation;
        private String _PlaceOfOrigin;
        private Boolean? _Marriage;
        private String _Education;
        private String _Professional;
        private String _Specialty;
        private Int32? _Probation;
        private Boolean? _LaborContract;
        private Decimal? _BasicSalary;
        private Int32? _LastEditEmpID;
        private DateTime? _LastEditTime;
        private Int32? _EmpStatus;
        private String _FamilyAddress;
        private String _BakContact;
        private String _BakContactTel;
        private Int32? _ProtectedCusCnt;
        private String _RelationSales;
        private String _RelationBuyers;
        private Boolean? _IsSales;
        private Boolean? _IsBuyer;
        private Boolean? _IsStockManager;
        private Int32? _IsActive;
        private String _TelFax;
        private String _QQ;
        private String _Skype;
        private String _DefaultSaleCurreny;
        private String _DefaultBuyCurreny;
        private String _Ocation;
        private Boolean? _IsDeleted;
        private Boolean? _IsSystem;

        #endregion

        #region Public Properties

        /// <summary>
        /// 员工ID,自增长列.
        /// </summary>
        public Int32 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                this.OnPropertyValueChange(_.EmpID, _EmpID, value);
                this._EmpID = value;
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public Guid? EmpGuid
        {
            get
            {
                return this._EmpGuid;
            }
            set
            {
                this.OnPropertyValueChange(_.EmpGuid, _EmpGuid, value);
                this._EmpGuid = value;
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public Guid? GCompanyID
        {
            get
            {
                return this._GCompanyID;
            }
            set
            {
                this.OnPropertyValueChange(_.GCompanyID, _GCompanyID, value);
                this._GCompanyID = value;
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public Int32? OrgID
        {
            get
            {
                return this._OrgID;
            }
            set
            {
                this.OnPropertyValueChange(_.OrgID, _OrgID, value);
                this._OrgID = value;
            }
        }

        /// <summary>
        /// 所属部门ID.
        /// </summary>
        public Int32? DeptID
        {
            get
            {
                return this._DeptID;
            }
            set
            {
                this.OnPropertyValueChange(_.DeptID, _DeptID, value);
                this._DeptID = value;
            }
        }

        /// <summary>
        /// 员工编号（如：SZ0057）,用于登录.
        /// </summary>
        public String EmpCode
        {
            get
            {
                return this._EmpCode;
            }
            set
            {
                this.OnPropertyValueChange(_.EmpCode, _EmpCode, value);
                this._EmpCode = value.SubStr(20);
            }
        }

        /// <summary>
        /// 员工姓名.
        /// </summary>
        public String EmpName
        {
            get
            {
                return this._EmpName;
            }
            set
            {
                this.OnPropertyValueChange(_.EmpName, _EmpName, value);
                this._EmpName = value.SubStr(50);
            }
        }

        /// <summary>
        /// 单据生成代码（就是在单据编号里包涵的代码）.
        /// </summary>
        public String BillCode
        {
            get
            {
                return this._BillCode;
            }
            set
            {
                this.OnPropertyValueChange(_.BillCode, _BillCode, value);
                this._BillCode = value.SubStr(20);
            }
        }

        /// <summary>
        /// 身份证号码.
        /// </summary>
        public String IdentityCardNo
        {
            get
            {
                return this._IdentityCardNo;
            }
            set
            {
                this.OnPropertyValueChange(_.IdentityCardNo, _IdentityCardNo, value);
                this._IdentityCardNo = value.SubStr(50);
            }
        }

        /// <summary>
        /// 性别.
        /// </summary>
        public Int32? Sex
        {
            get
            {
                return this._Sex;
            }
            set
            {
                this.OnPropertyValueChange(_.Sex, _Sex, value);
                this._Sex = value;
            }
        }

        /// <summary>
        /// 出生日期.
        /// </summary>
        public DateTime? Birthday
        {
            get
            {
                return this._Birthday;
            }
            set
            {
                this.OnPropertyValueChange(_.Birthday, _Birthday, value);
                this._Birthday = value;
            }
        }

        /// <summary>
        /// 岗位ID.
        /// </summary>
        public Int32? PositionID
        {
            get
            {
                return this._PositionID;
            }
            set
            {
                this.OnPropertyValueChange(_.PositionID, _PositionID, value);
                this._PositionID = value;
            }
        }

        /// <summary>
        /// 直接上司（默认跟部门负责人一样,针对个别人可以手动调整）.
        /// </summary>
        public Int32? ManagerEmpID
        {
            get
            {
                return this._ManagerEmpID;
            }
            set
            {
                this.OnPropertyValueChange(_.ManagerEmpID, _ManagerEmpID, value);
                this._ManagerEmpID = value;
            }
        }

        /// <summary>
        /// 社保号.
        /// </summary>
        public String SocialSecurityNo
        {
            get
            {
                return this._SocialSecurityNo;
            }
            set
            {
                this.OnPropertyValueChange(_.SocialSecurityNo, _SocialSecurityNo, value);
                this._SocialSecurityNo = value.SubStr(50);
            }
        }

        /// <summary>
        /// 入职时间.
        /// </summary>
        public DateTime? JoinTime
        {
            get
            {
                return this._JoinTime;
            }
            set
            {
                this.OnPropertyValueChange(_.JoinTime, _JoinTime, value);
                this._JoinTime = value;
            }
        }

        /// <summary>
        /// 离职时间.
        /// </summary>
        public DateTime? QuitTime
        {
            get
            {
                return this._QuitTime;
            }
            set
            {
                this.OnPropertyValueChange(_.QuitTime, _QuitTime, value);
                this._QuitTime = value;
            }
        }

        /// <summary>
        /// 固定电话.
        /// </summary>
        public String Telephone
        {
            get
            {
                return this._Telephone;
            }
            set
            {
                this.OnPropertyValueChange(_.Telephone, _Telephone, value);
                this._Telephone = value.SubStr(20);
            }
        }

        /// <summary>
        /// 手机.
        /// </summary>
        public String Mobile
        {
            get
            {
                return this._Mobile;
            }
            set
            {
                this.OnPropertyValueChange(_.Mobile, _Mobile, value);
                this._Mobile = value.SubStr(20);
            }
        }

        /// <summary>
        /// 电子邮箱.
        /// </summary>
        public String Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                this.OnPropertyValueChange(_.Email, _Email, value);
                this._Email = value.SubStr(50);
            }
        }

        /// <summary>
        /// 民族.
        /// </summary>
        public String Nation
        {
            get
            {
                return this._Nation;
            }
            set
            {
                this.OnPropertyValueChange(_.Nation, _Nation, value);
                this._Nation = value.SubStr(20);
            }
        }

        /// <summary>
        /// 籍贯.
        /// </summary>
        public String PlaceOfOrigin
        {
            get
            {
                return this._PlaceOfOrigin;
            }
            set
            {
                this.OnPropertyValueChange(_.PlaceOfOrigin, _PlaceOfOrigin, value);
                this._PlaceOfOrigin = value.SubStr(20);
            }
        }

        /// <summary>
        /// 婚姻状态.
        /// </summary>
        public Boolean? Marriage
        {
            get
            {
                return this._Marriage;
            }
            set
            {
                this.OnPropertyValueChange(_.Marriage, _Marriage, value);
                this._Marriage = value;
            }
        }

        /// <summary>
        /// 学历.
        /// </summary>
        public String Education
        {
            get
            {
                return this._Education;
            }
            set
            {
                this.OnPropertyValueChange(_.Education, _Education, value);
                this._Education = value.SubStr(20);
            }
        }

        /// <summary>
        /// 专业.
        /// </summary>
        public String Professional
        {
            get
            {
                return this._Professional;
            }
            set
            {
                this.OnPropertyValueChange(_.Professional, _Professional, value);
                this._Professional = value.SubStr(20);
            }
        }

        /// <summary>
        /// 特长.
        /// </summary>
        public String Specialty
        {
            get
            {
                return this._Specialty;
            }
            set
            {
                this.OnPropertyValueChange(_.Specialty, _Specialty, value);
                this._Specialty = value.SubStr(20);
            }
        }

        /// <summary>
        /// 试用期(月).
        /// </summary>
        public Int32? Probation
        {
            get
            {
                return this._Probation;
            }
            set
            {
                this.OnPropertyValueChange(_.Probation, _Probation, value);
                this._Probation = value;
            }
        }

        /// <summary>
        /// 签合同否.
        /// </summary>
        public Boolean? LaborContract
        {
            get
            {
                return this._LaborContract;
            }
            set
            {
                this.OnPropertyValueChange(_.LaborContract, _LaborContract, value);
                this._LaborContract = value;
            }
        }

        /// <summary>
        /// 底薪.
        /// </summary>
        public Decimal? BasicSalary
        {
            get
            {
                return this._BasicSalary;
            }
            set
            {
                this.OnPropertyValueChange(_.BasicSalary, _BasicSalary, value);
                this._BasicSalary = value;
            }
        }

        /// <summary>
        /// 最后更新人.
        /// </summary>
        public Int32? LastEditEmpID
        {
            get
            {
                return this._LastEditEmpID;
            }
            set
            {
                this.OnPropertyValueChange(_.LastEditEmpID, _LastEditEmpID, value);
                this._LastEditEmpID = value;
            }
        }

        /// <summary>
        /// 最后编辑时间.
        /// </summary>
        public DateTime? LastEditTime
        {
            get
            {
                return this._LastEditTime;
            }
            set
            {
                this.OnPropertyValueChange(_.LastEditTime, _LastEditTime, value);
                this._LastEditTime = value;
            }
        }

        /// <summary>
        /// 员工状态（试用/转正/离职/兼职）.
        /// </summary>
        public Int32? EmpStatus
        {
            get
            {
                return this._EmpStatus;
            }
            set
            {
                this.OnPropertyValueChange(_.EmpStatus, _EmpStatus, value);
                this._EmpStatus = value;
            }
        }

        /// <summary>
        /// 家庭地址.
        /// </summary>
        public String FamilyAddress
        {
            get
            {
                return this._FamilyAddress;
            }
            set
            {
                this.OnPropertyValueChange(_.FamilyAddress, _FamilyAddress, value);
                this._FamilyAddress = value.SubStr(300);
            }
        }

        /// <summary>
        /// 备用联系人.
        /// </summary>
        public String BakContact
        {
            get
            {
                return this._BakContact;
            }
            set
            {
                this.OnPropertyValueChange(_.BakContact, _BakContact, value);
                this._BakContact = value.SubStr(50);
            }
        }

        /// <summary>
        /// 备用联系电话.
        /// </summary>
        public String BakContactTel
        {
            get
            {
                return this._BakContactTel;
            }
            set
            {
                this.OnPropertyValueChange(_.BakContactTel, _BakContactTel, value);
                this._BakContactTel = value.SubStr(50);
            }
        }

        /// <summary>
        /// 保护客户数.
        /// </summary>
        public Int32? ProtectedCusCnt
        {
            get
            {
                return this._ProtectedCusCnt;
            }
            set
            {
                this.OnPropertyValueChange(_.ProtectedCusCnt, _ProtectedCusCnt, value);
                this._ProtectedCusCnt = value;
            }
        }

        /// <summary>
        /// 相关销售员（可以处理相关销售员的单据，选择销售员的客户）.
        /// </summary>
        public String RelationSales
        {
            get
            {
                return this._RelationSales;
            }
            set
            {
                this.OnPropertyValueChange(_.RelationSales, _RelationSales, value);
                this._RelationSales = value.SubStr(200);
            }
        }

        /// <summary>
        /// 相关采购员（可以处理相关采购员的单据，选择采购员的供应商）.
        /// </summary>
        public String RelationBuyers
        {
            get
            {
                return this._RelationBuyers;
            }
            set
            {
                this.OnPropertyValueChange(_.RelationBuyers, _RelationBuyers, value);
                this._RelationBuyers = value.SubStr(200);
            }
        }

        /// <summary>
        /// 业务员.
        /// </summary>
        public Boolean? IsSales
        {
            get
            {
                return this._IsSales;
            }
            set
            {
                this.OnPropertyValueChange(_.IsSales, _IsSales, value);
                this._IsSales = value;
            }
        }

        /// <summary>
        /// 采购员.
        /// </summary>
        public Boolean? IsBuyer
        {
            get
            {
                return this._IsBuyer;
            }
            set
            {
                this.OnPropertyValueChange(_.IsBuyer, _IsBuyer, value);
                this._IsBuyer = value;
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public Boolean? IsStockManager
        {
            get
            {
                return this._IsStockManager;
            }
            set
            {
                this.OnPropertyValueChange(_.IsStockManager, _IsStockManager, value);
                this._IsStockManager = value;
            }
        }

        /// <summary>
        /// 是否启用(1:禁用，2:启用，4:删除).
        /// </summary>
        public Int32? IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                this.OnPropertyValueChange(_.IsActive, _IsActive, value);
                this._IsActive = value;
            }
        }

        /// <summary>
        /// 传真.
        /// </summary>
        public String TelFax
        {
            get
            {
                return this._TelFax;
            }
            set
            {
                this.OnPropertyValueChange(_.TelFax, _TelFax, value);
                this._TelFax = value.SubStr(60);
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public String QQ
        {
            get
            {
                return this._QQ;
            }
            set
            {
                this.OnPropertyValueChange(_.QQ, _QQ, value);
                this._QQ = value.SubStr(30);
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public String Skype
        {
            get
            {
                return this._Skype;
            }
            set
            {
                this.OnPropertyValueChange(_.Skype, _Skype, value);
                this._Skype = value.SubStr(60);
            }
        }

        /// <summary>
        /// 默认销售币种.
        /// </summary>
        public String DefaultSaleCurreny
        {
            get
            {
                return this._DefaultSaleCurreny;
            }
            set
            {
                this.OnPropertyValueChange(_.DefaultSaleCurreny, _DefaultSaleCurreny, value);
                this._DefaultSaleCurreny = value.SubStr(10);
            }
        }

        /// <summary>
        /// 默认采购币种.
        /// </summary>
        public String DefaultBuyCurreny
        {
            get
            {
                return this._DefaultBuyCurreny;
            }
            set
            {
                this.OnPropertyValueChange(_.DefaultBuyCurreny, _DefaultBuyCurreny, value);
                this._DefaultBuyCurreny = value.SubStr(10);
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public String Ocation
        {
            get
            {
                return this._Ocation;
            }
            set
            {
                this.OnPropertyValueChange(_.Ocation, _Ocation, value);
                this._Ocation = value.SubStr(300);
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public Boolean? IsDeleted
        {
            get
            {
                return this._IsDeleted;
            }
            set
            {
                this.OnPropertyValueChange(_.IsDeleted, _IsDeleted, value);
                this._IsDeleted = value;
            }
        }

        /// <summary>
        /// 是否系统管理员.
        /// </summary>
        public Boolean? IsSystem
        {
            get
            {
                return this._IsSystem;
            }
            set
            {
                this.OnPropertyValueChange(_.IsSystem, _IsSystem, value);
                this._IsSystem = value;
            }
        }

        #endregion
        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override Table GetTable()
        {
            return new Table<HR_Employee>("HR_Employee");
        }

        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override Field GetIdentityField()
        {
            return _.EmpID;
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.EmpID
			};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override Field[] GetFields()
        {
            return new Field[] {
				_.EmpID,		
				_.EmpGuid,		
				_.GCompanyID,		
				_.OrgID,		
				_.DeptID,		
				_.EmpCode,		
				_.EmpName,		
				_.BillCode,		
				_.IdentityCardNo,		
				_.Sex,		
				_.Birthday,		
				_.PositionID,		
				_.ManagerEmpID,		
				_.SocialSecurityNo,		
				_.JoinTime,		
				_.QuitTime,		
				_.Telephone,		
				_.Mobile,		
				_.Email,		
				_.Nation,		
				_.PlaceOfOrigin,		
				_.Marriage,		
				_.Education,		
				_.Professional,		
				_.Specialty,		
				_.Probation,		
				_.LaborContract,		
				_.BasicSalary,		
				_.LastEditEmpID,		
				_.LastEditTime,		
				_.EmpStatus,		
				_.FamilyAddress,		
				_.BakContact,		
				_.BakContactTel,		
				_.ProtectedCusCnt,		
				_.RelationSales,		
				_.RelationBuyers,		
				_.IsSales,		
				_.IsBuyer,		
				_.IsStockManager,		
				_.IsActive,		
				_.TelFax,		
				_.QQ,		
				_.Skype,		
				_.DefaultSaleCurreny,		
				_.DefaultBuyCurreny,		
				_.Ocation,		
				_.IsDeleted,		
				_.IsSystem		
			};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
				this._EmpID,		
				this._EmpGuid,		
				this._GCompanyID,		
				this._OrgID,		
				this._DeptID,		
				this._EmpCode,		
				this._EmpName,		
				this._BillCode,		
				this._IdentityCardNo,		
				this._Sex,		
				this._Birthday,		
				this._PositionID,		
				this._ManagerEmpID,		
				this._SocialSecurityNo,		
				this._JoinTime,		
				this._QuitTime,		
				this._Telephone,		
				this._Mobile,		
				this._Email,		
				this._Nation,		
				this._PlaceOfOrigin,		
				this._Marriage,		
				this._Education,		
				this._Professional,		
				this._Specialty,		
				this._Probation,		
				this._LaborContract,		
				this._BasicSalary,		
				this._LastEditEmpID,		
				this._LastEditTime,		
				this._EmpStatus,		
				this._FamilyAddress,		
				this._BakContact,		
				this._BakContactTel,		
				this._ProtectedCusCnt,		
				this._RelationSales,		
				this._RelationBuyers,		
				this._IsSales,		
				this._IsBuyer,		
				this._IsStockManager,		
				this._IsActive,		
				this._TelFax,		
				this._QQ,		
				this._Skype,		
				this._DefaultSaleCurreny,		
				this._DefaultBuyCurreny,		
				this._Ocation,		
				this._IsDeleted,		
				this._IsSystem		
			};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.EmpID)))
            {
                this._EmpID = reader.GetInt32(_.EmpID);
            }
            if ((false == reader.IsDBNull(_.EmpGuid)))
            {
                this._EmpGuid = reader.GetGuid(_.EmpGuid);
            }
            if ((false == reader.IsDBNull(_.GCompanyID)))
            {
                this._GCompanyID = reader.GetGuid(_.GCompanyID);
            }
            if ((false == reader.IsDBNull(_.OrgID)))
            {
                this._OrgID = reader.GetInt32(_.OrgID);
            }
            if ((false == reader.IsDBNull(_.DeptID)))
            {
                this._DeptID = reader.GetInt32(_.DeptID);
            }
            if ((false == reader.IsDBNull(_.EmpCode)))
            {
                this._EmpCode = reader.GetString(_.EmpCode);
            }
            if ((false == reader.IsDBNull(_.EmpName)))
            {
                this._EmpName = reader.GetString(_.EmpName);
            }
            if ((false == reader.IsDBNull(_.BillCode)))
            {
                this._BillCode = reader.GetString(_.BillCode);
            }
            if ((false == reader.IsDBNull(_.IdentityCardNo)))
            {
                this._IdentityCardNo = reader.GetString(_.IdentityCardNo);
            }
            if ((false == reader.IsDBNull(_.Sex)))
            {
                this._Sex = reader.GetInt32(_.Sex);
            }
            if ((false == reader.IsDBNull(_.Birthday)))
            {
                this._Birthday = reader.GetDateTime(_.Birthday);
            }
            if ((false == reader.IsDBNull(_.PositionID)))
            {
                this._PositionID = reader.GetInt32(_.PositionID);
            }
            if ((false == reader.IsDBNull(_.ManagerEmpID)))
            {
                this._ManagerEmpID = reader.GetInt32(_.ManagerEmpID);
            }
            if ((false == reader.IsDBNull(_.SocialSecurityNo)))
            {
                this._SocialSecurityNo = reader.GetString(_.SocialSecurityNo);
            }
            if ((false == reader.IsDBNull(_.JoinTime)))
            {
                this._JoinTime = reader.GetDateTime(_.JoinTime);
            }
            if ((false == reader.IsDBNull(_.QuitTime)))
            {
                this._QuitTime = reader.GetDateTime(_.QuitTime);
            }
            if ((false == reader.IsDBNull(_.Telephone)))
            {
                this._Telephone = reader.GetString(_.Telephone);
            }
            if ((false == reader.IsDBNull(_.Mobile)))
            {
                this._Mobile = reader.GetString(_.Mobile);
            }
            if ((false == reader.IsDBNull(_.Email)))
            {
                this._Email = reader.GetString(_.Email);
            }
            if ((false == reader.IsDBNull(_.Nation)))
            {
                this._Nation = reader.GetString(_.Nation);
            }
            if ((false == reader.IsDBNull(_.PlaceOfOrigin)))
            {
                this._PlaceOfOrigin = reader.GetString(_.PlaceOfOrigin);
            }
            if ((false == reader.IsDBNull(_.Marriage)))
            {
                this._Marriage = reader.GetBoolean(_.Marriage);
            }
            if ((false == reader.IsDBNull(_.Education)))
            {
                this._Education = reader.GetString(_.Education);
            }
            if ((false == reader.IsDBNull(_.Professional)))
            {
                this._Professional = reader.GetString(_.Professional);
            }
            if ((false == reader.IsDBNull(_.Specialty)))
            {
                this._Specialty = reader.GetString(_.Specialty);
            }
            if ((false == reader.IsDBNull(_.Probation)))
            {
                this._Probation = reader.GetInt32(_.Probation);
            }
            if ((false == reader.IsDBNull(_.LaborContract)))
            {
                this._LaborContract = reader.GetBoolean(_.LaborContract);
            }
            if ((false == reader.IsDBNull(_.BasicSalary)))
            {
                this._BasicSalary = reader.GetDecimal(_.BasicSalary);
            }
            if ((false == reader.IsDBNull(_.LastEditEmpID)))
            {
                this._LastEditEmpID = reader.GetInt32(_.LastEditEmpID);
            }
            if ((false == reader.IsDBNull(_.LastEditTime)))
            {
                this._LastEditTime = reader.GetDateTime(_.LastEditTime);
            }
            if ((false == reader.IsDBNull(_.EmpStatus)))
            {
                this._EmpStatus = reader.GetInt32(_.EmpStatus);
            }
            if ((false == reader.IsDBNull(_.FamilyAddress)))
            {
                this._FamilyAddress = reader.GetString(_.FamilyAddress);
            }
            if ((false == reader.IsDBNull(_.BakContact)))
            {
                this._BakContact = reader.GetString(_.BakContact);
            }
            if ((false == reader.IsDBNull(_.BakContactTel)))
            {
                this._BakContactTel = reader.GetString(_.BakContactTel);
            }
            if ((false == reader.IsDBNull(_.ProtectedCusCnt)))
            {
                this._ProtectedCusCnt = reader.GetInt32(_.ProtectedCusCnt);
            }
            if ((false == reader.IsDBNull(_.RelationSales)))
            {
                this._RelationSales = reader.GetString(_.RelationSales);
            }
            if ((false == reader.IsDBNull(_.RelationBuyers)))
            {
                this._RelationBuyers = reader.GetString(_.RelationBuyers);
            }
            if ((false == reader.IsDBNull(_.IsSales)))
            {
                this._IsSales = reader.GetBoolean(_.IsSales);
            }
            if ((false == reader.IsDBNull(_.IsBuyer)))
            {
                this._IsBuyer = reader.GetBoolean(_.IsBuyer);
            }
            if ((false == reader.IsDBNull(_.IsStockManager)))
            {
                this._IsStockManager = reader.GetBoolean(_.IsStockManager);
            }
            if ((false == reader.IsDBNull(_.IsActive)))
            {
                this._IsActive = reader.GetInt32(_.IsActive);
            }
            if ((false == reader.IsDBNull(_.TelFax)))
            {
                this._TelFax = reader.GetString(_.TelFax);
            }
            if ((false == reader.IsDBNull(_.QQ)))
            {
                this._QQ = reader.GetString(_.QQ);
            }
            if ((false == reader.IsDBNull(_.Skype)))
            {
                this._Skype = reader.GetString(_.Skype);
            }
            if ((false == reader.IsDBNull(_.DefaultSaleCurreny)))
            {
                this._DefaultSaleCurreny = reader.GetString(_.DefaultSaleCurreny);
            }
            if ((false == reader.IsDBNull(_.DefaultBuyCurreny)))
            {
                this._DefaultBuyCurreny = reader.GetString(_.DefaultBuyCurreny);
            }
            if ((false == reader.IsDBNull(_.Ocation)))
            {
                this._Ocation = reader.GetString(_.Ocation);
            }
            if ((false == reader.IsDBNull(_.IsDeleted)))
            {
                this._IsDeleted = reader.GetBoolean(_.IsDeleted);
            }
            if ((false == reader.IsDBNull(_.IsSystem)))
            {
                this._IsSystem = reader.GetBoolean(_.IsSystem);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(HR_Employee).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static AllField All = new AllField<HR_Employee>();

            /// <summary>
            /// 员工ID,自增长列 - 字段名：EmpID - 数据类型：Int32?
            /// </summary>
            public static Field EmpID = new Field<HR_Employee>("EmpID");
            /// <summary>
            ///  - 字段名：EmpGuid - 数据类型：Guid?
            /// </summary>
            public static Field EmpGuid = new Field<HR_Employee>("EmpGuid");
            /// <summary>
            ///  - 字段名：GCompanyID - 数据类型：Guid?
            /// </summary>
            public static Field GCompanyID = new Field<HR_Employee>("GCompanyID");
            /// <summary>
            ///  - 字段名：OrgID - 数据类型：Int32?
            /// </summary>
            public static Field OrgID = new Field<HR_Employee>("OrgID");
            /// <summary>
            /// 所属部门ID - 字段名：DeptID - 数据类型：Int32?
            /// </summary>
            public static Field DeptID = new Field<HR_Employee>("DeptID");
            /// <summary>
            /// 员工编号（如：SZ0057）,用于登录 - 字段名：EmpCode - 数据类型：String
            /// </summary>
            public static Field EmpCode = new Field<HR_Employee>("EmpCode");
            /// <summary>
            /// 员工姓名 - 字段名：EmpName - 数据类型：String
            /// </summary>
            public static Field EmpName = new Field<HR_Employee>("EmpName");
            /// <summary>
            /// 单据生成代码（就是在单据编号里包涵的代码） - 字段名：BillCode - 数据类型：String
            /// </summary>
            public static Field BillCode = new Field<HR_Employee>("BillCode");
            /// <summary>
            /// 身份证号码 - 字段名：IdentityCardNo - 数据类型：String
            /// </summary>
            public static Field IdentityCardNo = new Field<HR_Employee>("IdentityCardNo");
            /// <summary>
            /// 性别 - 字段名：Sex - 数据类型：Int32?
            /// </summary>
            public static Field Sex = new Field<HR_Employee>("Sex");
            /// <summary>
            /// 出生日期 - 字段名：Birthday - 数据类型：DateTime?
            /// </summary>
            public static Field Birthday = new Field<HR_Employee>("Birthday");
            /// <summary>
            /// 岗位ID - 字段名：PositionID - 数据类型：Int32?
            /// </summary>
            public static Field PositionID = new Field<HR_Employee>("PositionID");
            /// <summary>
            /// 直接上司（默认跟部门负责人一样,针对个别人可以手动调整） - 字段名：ManagerEmpID - 数据类型：Int32?
            /// </summary>
            public static Field ManagerEmpID = new Field<HR_Employee>("ManagerEmpID");
            /// <summary>
            /// 社保号 - 字段名：SocialSecurityNo - 数据类型：String
            /// </summary>
            public static Field SocialSecurityNo = new Field<HR_Employee>("SocialSecurityNo");
            /// <summary>
            /// 入职时间 - 字段名：JoinTime - 数据类型：DateTime?
            /// </summary>
            public static Field JoinTime = new Field<HR_Employee>("JoinTime");
            /// <summary>
            /// 离职时间 - 字段名：QuitTime - 数据类型：DateTime?
            /// </summary>
            public static Field QuitTime = new Field<HR_Employee>("QuitTime");
            /// <summary>
            /// 固定电话 - 字段名：Telephone - 数据类型：String
            /// </summary>
            public static Field Telephone = new Field<HR_Employee>("Telephone");
            /// <summary>
            /// 手机 - 字段名：Mobile - 数据类型：String
            /// </summary>
            public static Field Mobile = new Field<HR_Employee>("Mobile");
            /// <summary>
            /// 电子邮箱 - 字段名：Email - 数据类型：String
            /// </summary>
            public static Field Email = new Field<HR_Employee>("Email");
            /// <summary>
            /// 民族 - 字段名：Nation - 数据类型：String
            /// </summary>
            public static Field Nation = new Field<HR_Employee>("Nation");
            /// <summary>
            /// 籍贯 - 字段名：PlaceOfOrigin - 数据类型：String
            /// </summary>
            public static Field PlaceOfOrigin = new Field<HR_Employee>("PlaceOfOrigin");
            /// <summary>
            /// 婚姻状态 - 字段名：Marriage - 数据类型：Boolean?
            /// </summary>
            public static Field Marriage = new Field<HR_Employee>("Marriage");
            /// <summary>
            /// 学历 - 字段名：Education - 数据类型：String
            /// </summary>
            public static Field Education = new Field<HR_Employee>("Education");
            /// <summary>
            /// 专业 - 字段名：Professional - 数据类型：String
            /// </summary>
            public static Field Professional = new Field<HR_Employee>("Professional");
            /// <summary>
            /// 特长 - 字段名：Specialty - 数据类型：String
            /// </summary>
            public static Field Specialty = new Field<HR_Employee>("Specialty");
            /// <summary>
            /// 试用期(月) - 字段名：Probation - 数据类型：Int32?
            /// </summary>
            public static Field Probation = new Field<HR_Employee>("Probation");
            /// <summary>
            /// 签合同否 - 字段名：LaborContract - 数据类型：Boolean?
            /// </summary>
            public static Field LaborContract = new Field<HR_Employee>("LaborContract");
            /// <summary>
            /// 底薪 - 字段名：BasicSalary - 数据类型：Decimal?
            /// </summary>
            public static Field BasicSalary = new Field<HR_Employee>("BasicSalary");
            /// <summary>
            /// 最后更新人 - 字段名：LastEditEmpID - 数据类型：Int32?
            /// </summary>
            public static Field LastEditEmpID = new Field<HR_Employee>("LastEditEmpID");
            /// <summary>
            /// 最后编辑时间 - 字段名：LastEditTime - 数据类型：DateTime?
            /// </summary>
            public static Field LastEditTime = new Field<HR_Employee>("LastEditTime");
            /// <summary>
            /// 员工状态（试用/转正/离职/兼职） - 字段名：EmpStatus - 数据类型：Int32?
            /// </summary>
            public static Field EmpStatus = new Field<HR_Employee>("EmpStatus");
            /// <summary>
            /// 家庭地址 - 字段名：FamilyAddress - 数据类型：String
            /// </summary>
            public static Field FamilyAddress = new Field<HR_Employee>("FamilyAddress");
            /// <summary>
            /// 备用联系人 - 字段名：BakContact - 数据类型：String
            /// </summary>
            public static Field BakContact = new Field<HR_Employee>("BakContact");
            /// <summary>
            /// 备用联系电话 - 字段名：BakContactTel - 数据类型：String
            /// </summary>
            public static Field BakContactTel = new Field<HR_Employee>("BakContactTel");
            /// <summary>
            /// 保护客户数 - 字段名：ProtectedCusCnt - 数据类型：Int32?
            /// </summary>
            public static Field ProtectedCusCnt = new Field<HR_Employee>("ProtectedCusCnt");
            /// <summary>
            /// 相关销售员（可以处理相关销售员的单据，选择销售员的客户） - 字段名：RelationSales - 数据类型：String
            /// </summary>
            public static Field RelationSales = new Field<HR_Employee>("RelationSales");
            /// <summary>
            /// 相关采购员（可以处理相关采购员的单据，选择采购员的供应商） - 字段名：RelationBuyers - 数据类型：String
            /// </summary>
            public static Field RelationBuyers = new Field<HR_Employee>("RelationBuyers");
            /// <summary>
            /// 业务员 - 字段名：IsSales - 数据类型：Boolean?
            /// </summary>
            public static Field IsSales = new Field<HR_Employee>("IsSales");
            /// <summary>
            /// 采购员 - 字段名：IsBuyer - 数据类型：Boolean?
            /// </summary>
            public static Field IsBuyer = new Field<HR_Employee>("IsBuyer");
            /// <summary>
            ///  - 字段名：IsStockManager - 数据类型：Boolean?
            /// </summary>
            public static Field IsStockManager = new Field<HR_Employee>("IsStockManager");
            /// <summary>
            /// 是否启用(1:禁用，2:启用，4:删除) - 字段名：IsActive - 数据类型：Int32?
            /// </summary>
            public static Field IsActive = new Field<HR_Employee>("IsActive");
            /// <summary>
            /// 传真 - 字段名：TelFax - 数据类型：String
            /// </summary>
            public static Field TelFax = new Field<HR_Employee>("TelFax");
            /// <summary>
            ///  - 字段名：QQ - 数据类型：String
            /// </summary>
            public static Field QQ = new Field<HR_Employee>("QQ");
            /// <summary>
            ///  - 字段名：Skype - 数据类型：String
            /// </summary>
            public static Field Skype = new Field<HR_Employee>("Skype");
            /// <summary>
            /// 默认销售币种 - 字段名：DefaultSaleCurreny - 数据类型：String
            /// </summary>
            public static Field DefaultSaleCurreny = new Field<HR_Employee>("DefaultSaleCurreny");
            /// <summary>
            /// 默认采购币种 - 字段名：DefaultBuyCurreny - 数据类型：String
            /// </summary>
            public static Field DefaultBuyCurreny = new Field<HR_Employee>("DefaultBuyCurreny");
            /// <summary>
            ///  - 字段名：Ocation - 数据类型：String
            /// </summary>
            public static Field Ocation = new Field<HR_Employee>("Ocation");
            /// <summary>
            ///  - 字段名：IsDeleted - 数据类型：Boolean?
            /// </summary>
            public static Field IsDeleted = new Field<HR_Employee>("IsDeleted");
            /// <summary>
            /// 是否系统管理员 - 字段名：IsSystem - 数据类型：Boolean?
            /// </summary>
            public static Field IsSystem = new Field<HR_Employee>("IsSystem");
        }
    }
}
