//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//
//     Creater: David
//     Date:    2015/3/14
//     Time:    14:11
//     Version: 4.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

/// <summary>
/// CodeSmith自动生成的实体
/// </summary>
namespace ZNLCRM.Entity.DBModel
{	
	using System;
	using MySoft.Data;
	using ZNLCRM.Utility;
    using ZNLFrame.Entity;
    /// <summary>
    /// 表名：STK_InLine 主键列：StkInLineGuid
    /// </summary>
    [SerializableAttribute()]
	public partial class STK_InLine : BaseEntity
	{
		#region Private Properties
		
		private Int32? _StkInLineID;
		private Guid? _StkInLineGuid;
		private Guid? _StkInGuid;
		private Guid? _GCompanyID;
		private Int32? _BuyerID;
		private String _BuyerName;
		private Guid? _SourceBillGuid;
		private Guid? _SourceBillLineGuid;
		private Guid? _SOLineGuid;
		private Guid? _ItemCode;
		private String _Model;
		private String _Brand;
		private String _Package;
		private String _Batch;
		private String _Quality;
		private String _MPQ;
		private String _MarkCode;
		private String _InvType;
		private String _Warehouse;
		private String _Location;
		private Int32? _Qty;
		private Int32? _BookedQty;
		private Int32? _StkOutQty;
		private Int32? _ReturnOccQty;
		private String _Unit;
		private Decimal? _UnitPrice;
		private Decimal? _Freight;
		private Decimal? _CostPrice;
		private String _Currency;
		private Decimal? _ExchangeRate;
		private Decimal? _TaxRate;
		private Boolean? _IsRaiseTaxes;
		private Decimal? _Amount;
		private Decimal? _SCAmount;
		private Decimal? _PaymentAmount;
		private DateTime? _PayAmtDate;
		private String _Demands;
		private String _Remark;
		private Boolean? _IsCut;
		private Boolean? _IsPCut;
		private Boolean? _IsGive;
		private Int32? _CreatedEmpID;
		private String _CreatedEmpName;
		private DateTime? _CreatedTime;
		private Int32? _UpdatedEmpID;
		private String _UpdatedEmpName;
		private DateTime? _UpdatedTime;
		private Boolean? _IsDeleted;
		
		#endregion
		
		#region Public Properties
		
		/// <summary>
		/// 入库明细GUID.
		/// </summary>
		public Guid? StkInLineGuid
		{
			get 
			{
				return _StkInLineGuid;
			}
			set 
			{
				this.OnPropertyValueChange(_.StkInLineGuid, _StkInLineGuid , value);
				this._StkInLineGuid = value;
			}
		}
		
		/// <summary>
		/// .
		/// </summary>
		public Int32? StkInLineID
		{
			get 
			{
				return this._StkInLineID;
			}
			set 
			{
				this.OnPropertyValueChange(_.StkInLineID, _StkInLineID , value);
				this._StkInLineID = value;
			}
		}

		/// <summary>
		/// 入库主单GUID.
		/// </summary>
		public Guid? StkInGuid
		{
			get 
			{
				return this._StkInGuid;
			}
			set 
			{
				this.OnPropertyValueChange(_.StkInGuid, _StkInGuid , value);
				this._StkInGuid = value;
			}
		}

		/// <summary>
		/// .
		/// </summary>
		public Guid? GCompanyID
		{
			get 
			{
				return this._GCompanyID;
			}
			set 
			{
				this.OnPropertyValueChange(_.GCompanyID, _GCompanyID , value);
				this._GCompanyID = value;
			}
		}

		/// <summary>
		/// 采购员ID.
		/// </summary>
		public Int32? BuyerID
		{
			get 
			{
				return this._BuyerID;
			}
			set 
			{
				this.OnPropertyValueChange(_.BuyerID, _BuyerID , value);
				this._BuyerID = value;
			}
		}

		/// <summary>
		/// 采购员.
		/// </summary>
		public String BuyerName
		{
			get 
			{
				return this._BuyerName;
			}
			set 
			{
				this.OnPropertyValueChange(_.BuyerName, _BuyerName , value);
				this._BuyerName = value.SubStr(50);
			}
		}

		/// <summary>
		/// 关联单据主单GUID（采购单Guid ,销售退货单Guid）.
		/// </summary>
		public Guid? SourceBillGuid
		{
			get 
			{
				return this._SourceBillGuid;
			}
			set 
			{
				this.OnPropertyValueChange(_.SourceBillGuid, _SourceBillGuid , value);
				this._SourceBillGuid = value;
			}
		}

		/// <summary>
		/// 关联单据明细GUID（采购明细Guid ,销售退货明细Guid）.
		/// </summary>
		public Guid? SourceBillLineGuid
		{
			get 
			{
				return this._SourceBillLineGuid;
			}
			set 
			{
				this.OnPropertyValueChange(_.SourceBillLineGuid, _SourceBillLineGuid , value);
				this._SourceBillLineGuid = value;
			}
		}

		/// <summary>
		/// 销售明细Guid（只有订单采购的才填写，差异调整入库和销售退货入库不需要填写）.
		/// </summary>
		public Guid? SOLineGuid
		{
			get 
			{
				return this._SOLineGuid;
			}
			set 
			{
				this.OnPropertyValueChange(_.SOLineGuid, _SOLineGuid , value);
				this._SOLineGuid = value;
			}
		}

		/// <summary>
		/// 库存ID.
		/// </summary>
		public Guid? ItemCode
		{
			get 
			{
				return this._ItemCode;
			}
			set 
			{
				this.OnPropertyValueChange(_.ItemCode, _ItemCode , value);
				this._ItemCode = value;
			}
		}

		/// <summary>
		/// 型号.
		/// </summary>
		public String Model
		{
			get 
			{
				return this._Model;
			}
			set 
			{
				this.OnPropertyValueChange(_.Model, _Model , value);
				this._Model = value.SubStr(50);
			}
		}

		/// <summary>
		/// 品牌.
		/// </summary>
		public String Brand
		{
			get 
			{
				return this._Brand;
			}
			set 
			{
				this.OnPropertyValueChange(_.Brand, _Brand , value);
				this._Brand = value.SubStr(50);
			}
		}

		/// <summary>
		/// 封装.
		/// </summary>
		public String Package
		{
			get 
			{
				return this._Package;
			}
			set 
			{
				this.OnPropertyValueChange(_.Package, _Package , value);
				this._Package = value.SubStr(50);
			}
		}

		/// <summary>
		/// 批号.
		/// </summary>
		public String Batch
		{
			get 
			{
				return this._Batch;
			}
			set 
			{
				this.OnPropertyValueChange(_.Batch, _Batch , value);
				this._Batch = value.SubStr(50);
			}
		}

		/// <summary>
		/// 品质.
		/// </summary>
		public String Quality
		{
			get 
			{
				return this._Quality;
			}
			set 
			{
				this.OnPropertyValueChange(_.Quality, _Quality , value);
				this._Quality = value.SubStr(50);
			}
		}

		/// <summary>
		/// 包装.
		/// </summary>
		public String MPQ
		{
			get 
			{
				return this._MPQ;
			}
			set 
			{
				this.OnPropertyValueChange(_.MPQ, _MPQ , value);
				this._MPQ = value.SubStr(50);
			}
		}

		/// <summary>
		/// 标记码.
		/// </summary>
		public String MarkCode
		{
			get 
			{
				return this._MarkCode;
			}
			set 
			{
				this.OnPropertyValueChange(_.MarkCode, _MarkCode , value);
				this._MarkCode = value.SubStr(50);
			}
		}

		/// <summary>
		/// 库存类型.
		/// </summary>
		public String InvType
		{
			get 
			{
				return this._InvType;
			}
			set 
			{
				this.OnPropertyValueChange(_.InvType, _InvType , value);
				this._InvType = value.SubStr(10);
			}
		}

		/// <summary>
		/// 仓库.
		/// </summary>
		public String Warehouse
		{
			get 
			{
				return this._Warehouse;
			}
			set 
			{
				this.OnPropertyValueChange(_.Warehouse, _Warehouse , value);
				this._Warehouse = value.SubStr(10);
			}
		}

		/// <summary>
		/// 位置.
		/// </summary>
		public String Location
		{
			get 
			{
				return this._Location;
			}
			set 
			{
				this.OnPropertyValueChange(_.Location, _Location , value);
				this._Location = value.SubStr(10);
			}
		}

		/// <summary>
		/// 入库数量.
		/// </summary>
		public Int32? Qty
		{
			get 
			{
				return this._Qty;
			}
			set 
			{
				this.OnPropertyValueChange(_.Qty, _Qty , value);
				this._Qty = value;
			}
		}

		/// <summary>
		/// 预留数（预留时回写）.
		/// </summary>
		public Int32? BookedQty
		{
			get 
			{
				return this._BookedQty;
			}
			set 
			{
				this.OnPropertyValueChange(_.BookedQty, _BookedQty , value);
				this._BookedQty = value;
			}
		}

		/// <summary>
		/// 出库数量.
		/// </summary>
		public Int32? StkOutQty
		{
			get 
			{
				return this._StkOutQty;
			}
			set 
			{
				this.OnPropertyValueChange(_.StkOutQty, _StkOutQty , value);
				this._StkOutQty = value;
			}
		}

		/// <summary>
		/// 采购退货占有数量.
		/// </summary>
		public Int32? ReturnOccQty
		{
			get 
			{
				return this._ReturnOccQty;
			}
			set 
			{
				this.OnPropertyValueChange(_.ReturnOccQty, _ReturnOccQty , value);
				this._ReturnOccQty = value;
			}
		}

		/// <summary>
		/// 单位.
		/// </summary>
		public String Unit
		{
			get 
			{
				return this._Unit;
			}
			set 
			{
				this.OnPropertyValueChange(_.Unit, _Unit , value);
				this._Unit = value.SubStr(10);
			}
		}

		/// <summary>
		/// 采购进价.
		/// </summary>
		public Decimal? UnitPrice
		{
			get 
			{
				return this._UnitPrice;
			}
			set 
			{
				this.OnPropertyValueChange(_.UnitPrice, _UnitPrice , value);
				this._UnitPrice = value;
			}
		}

		/// <summary>
		/// 运费.
		/// </summary>
		public Decimal? Freight
		{
			get 
			{
				return this._Freight;
			}
			set 
			{
				this.OnPropertyValueChange(_.Freight, _Freight , value);
				this._Freight = value;
			}
		}

		/// <summary>
		/// 成本单价.
		/// </summary>
		public Decimal? CostPrice
		{
			get 
			{
				return this._CostPrice;
			}
			set 
			{
				this.OnPropertyValueChange(_.CostPrice, _CostPrice , value);
				this._CostPrice = value;
			}
		}

		/// <summary>
		/// 币种.
		/// </summary>
		public String Currency
		{
			get 
			{
				return this._Currency;
			}
			set 
			{
				this.OnPropertyValueChange(_.Currency, _Currency , value);
				this._Currency = value.SubStr(10);
			}
		}

		/// <summary>
		/// 汇率.
		/// </summary>
		public Decimal? ExchangeRate
		{
			get 
			{
				return this._ExchangeRate;
			}
			set 
			{
				this.OnPropertyValueChange(_.ExchangeRate, _ExchangeRate , value);
				this._ExchangeRate = value;
			}
		}

		/// <summary>
		/// 税率.
		/// </summary>
		public Decimal? TaxRate
		{
			get 
			{
				return this._TaxRate;
			}
			set 
			{
				this.OnPropertyValueChange(_.TaxRate, _TaxRate , value);
				this._TaxRate = value;
			}
		}

		/// <summary>
		/// 是否已提税金.
		/// </summary>
		public Boolean? IsRaiseTaxes
		{
			get 
			{
				return this._IsRaiseTaxes;
			}
			set 
			{
				this.OnPropertyValueChange(_.IsRaiseTaxes, _IsRaiseTaxes , value);
				this._IsRaiseTaxes = value;
			}
		}

		/// <summary>
		/// 小计金额.
		/// </summary>
		public Decimal? Amount
		{
			get 
			{
				return this._Amount;
			}
			set 
			{
				this.OnPropertyValueChange(_.Amount, _Amount , value);
				this._Amount = value;
			}
		}

		/// <summary>
		/// 本币金额（RMB）.
		/// </summary>
		public Decimal? SCAmount
		{
			get 
			{
				return this._SCAmount;
			}
			set 
			{
				this.OnPropertyValueChange(_.SCAmount, _SCAmount , value);
				this._SCAmount = value;
			}
		}

		/// <summary>
		/// 已付款金额.
		/// </summary>
		public Decimal? PaymentAmount
		{
			get 
			{
				return this._PaymentAmount;
			}
			set 
			{
				this.OnPropertyValueChange(_.PaymentAmount, _PaymentAmount , value);
				this._PaymentAmount = value;
			}
		}

		/// <summary>
		/// 付款日期.
		/// </summary>
		public DateTime? PayAmtDate
		{
			get 
			{
				return this._PayAmtDate;
			}
			set 
			{
				this.OnPropertyValueChange(_.PayAmtDate, _PayAmtDate , value);
				this._PayAmtDate = value;
			}
		}

		/// <summary>
		/// 采购要求.
		/// </summary>
		public String Demands
		{
			get 
			{
				return this._Demands;
			}
			set 
			{
				this.OnPropertyValueChange(_.Demands, _Demands , value);
				this._Demands = value.SubStr(50);
			}
		}

		/// <summary>
		/// 备注.
		/// </summary>
		public String Remark
		{
			get 
			{
				return this._Remark;
			}
			set 
			{
				this.OnPropertyValueChange(_.Remark, _Remark , value);
				this._Remark = value.SubStr(100);
			}
		}

		/// <summary>
		/// 是否纳入销售提成.
		/// </summary>
		public Boolean? IsCut
		{
			get 
			{
				return this._IsCut;
			}
			set 
			{
				this.OnPropertyValueChange(_.IsCut, _IsCut , value);
				this._IsCut = value;
			}
		}

		/// <summary>
		/// 是否纳入采购提成.
		/// </summary>
		public Boolean? IsPCut
		{
			get 
			{
				return this._IsPCut;
			}
			set 
			{
				this.OnPropertyValueChange(_.IsPCut, _IsPCut , value);
				this._IsPCut = value;
			}
		}

		/// <summary>
		/// 是否赠送.
		/// </summary>
		public Boolean? IsGive
		{
			get 
			{
				return this._IsGive;
			}
			set 
			{
				this.OnPropertyValueChange(_.IsGive, _IsGive , value);
				this._IsGive = value;
			}
		}

		/// <summary>
		/// .
		/// </summary>
		public Int32? CreatedEmpID
		{
			get 
			{
				return this._CreatedEmpID;
			}
			set 
			{
				this.OnPropertyValueChange(_.CreatedEmpID, _CreatedEmpID , value);
				this._CreatedEmpID = value;
			}
		}

		/// <summary>
		/// .
		/// </summary>
		public String CreatedEmpName
		{
			get 
			{
				return this._CreatedEmpName;
			}
			set 
			{
				this.OnPropertyValueChange(_.CreatedEmpName, _CreatedEmpName , value);
				this._CreatedEmpName = value.SubStr(50);
			}
		}

		/// <summary>
		/// .
		/// </summary>
		public DateTime? CreatedTime
		{
			get 
			{
				return this._CreatedTime;
			}
			set 
			{
				this.OnPropertyValueChange(_.CreatedTime, _CreatedTime , value);
				this._CreatedTime = value;
			}
		}

		/// <summary>
		/// .
		/// </summary>
		public Int32? UpdatedEmpID
		{
			get 
			{
				return this._UpdatedEmpID;
			}
			set 
			{
				this.OnPropertyValueChange(_.UpdatedEmpID, _UpdatedEmpID , value);
				this._UpdatedEmpID = value;
			}
		}

		/// <summary>
		/// .
		/// </summary>
		public String UpdatedEmpName
		{
			get 
			{
				return this._UpdatedEmpName;
			}
			set 
			{
				this.OnPropertyValueChange(_.UpdatedEmpName, _UpdatedEmpName , value);
				this._UpdatedEmpName = value.SubStr(50);
			}
		}

		/// <summary>
		/// .
		/// </summary>
		public DateTime? UpdatedTime
		{
			get 
			{
				return this._UpdatedTime;
			}
			set 
			{
				this.OnPropertyValueChange(_.UpdatedTime, _UpdatedTime , value);
				this._UpdatedTime = value;
			}
		}

		/// <summary>
		/// 删除标记.
		/// </summary>
		public Boolean? IsDeleted
		{
			get 
			{
				return this._IsDeleted;
			}
			set 
			{
				this.OnPropertyValueChange(_.IsDeleted, _IsDeleted , value);
				this._IsDeleted = value;
			}
		}
		
		#endregion
	    /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override Table GetTable() {
            return new Table< STK_InLine >("STK_InLine");
        }
		
        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override Field GetIdentityField() {
            return _.StkInLineID;
        }  			
		
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override Field[] GetPrimaryKeyFields() {
            return new Field[] {
				_.StkInLineGuid
			};
        }
			
	    /// <summary>
        /// 获取列信息
        /// </summary>
        protected override Field[] GetFields() {
            return new Field[] {
				_.StkInLineID,		
				_.StkInLineGuid,		
				_.StkInGuid,		
				_.GCompanyID,		
				_.BuyerID,		
				_.BuyerName,		
				_.SourceBillGuid,		
				_.SourceBillLineGuid,		
				_.SOLineGuid,		
				_.ItemCode,		
				_.Model,		
				_.Brand,		
				_.Package,		
				_.Batch,		
				_.Quality,		
				_.MPQ,		
				_.MarkCode,		
				_.InvType,		
				_.Warehouse,		
				_.Location,		
				_.Qty,		
				_.BookedQty,		
				_.StkOutQty,		
				_.ReturnOccQty,		
				_.Unit,		
				_.UnitPrice,		
				_.Freight,		
				_.CostPrice,		
				_.Currency,		
				_.ExchangeRate,		
				_.TaxRate,		
				_.IsRaiseTaxes,		
				_.Amount,		
				_.SCAmount,		
				_.PaymentAmount,		
				_.PayAmtDate,		
				_.Demands,		
				_.Remark,		
				_.IsCut,		
				_.IsPCut,		
				_.IsGive,		
				_.CreatedEmpID,		
				_.CreatedEmpName,		
				_.CreatedTime,		
				_.UpdatedEmpID,		
				_.UpdatedEmpName,		
				_.UpdatedTime,		
				_.IsDeleted		
			};
		}
		
	    /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues() {
            return new object[] {
				this._StkInLineID,		
				this._StkInLineGuid,		
				this._StkInGuid,		
				this._GCompanyID,		
				this._BuyerID,		
				this._BuyerName,		
				this._SourceBillGuid,		
				this._SourceBillLineGuid,		
				this._SOLineGuid,		
				this._ItemCode,		
				this._Model,		
				this._Brand,		
				this._Package,		
				this._Batch,		
				this._Quality,		
				this._MPQ,		
				this._MarkCode,		
				this._InvType,		
				this._Warehouse,		
				this._Location,		
				this._Qty,		
				this._BookedQty,		
				this._StkOutQty,		
				this._ReturnOccQty,		
				this._Unit,		
				this._UnitPrice,		
				this._Freight,		
				this._CostPrice,		
				this._Currency,		
				this._ExchangeRate,		
				this._TaxRate,		
				this._IsRaiseTaxes,		
				this._Amount,		
				this._SCAmount,		
				this._PaymentAmount,		
				this._PayAmtDate,		
				this._Demands,		
				this._Remark,		
				this._IsCut,		
				this._IsPCut,		
				this._IsGive,		
				this._CreatedEmpID,		
				this._CreatedEmpName,		
				this._CreatedTime,		
				this._UpdatedEmpID,		
				this._UpdatedEmpName,		
				this._UpdatedTime,		
				this._IsDeleted		
			};
		}
		
	    /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(IRowReader reader) {
            if ((false == reader.IsDBNull(_.StkInLineID))) {
                this._StkInLineID = reader.GetInt32(_.StkInLineID);
            }
            if ((false == reader.IsDBNull(_.StkInLineGuid))) {
                this._StkInLineGuid = reader.GetGuid(_.StkInLineGuid);
            }
            if ((false == reader.IsDBNull(_.StkInGuid))) {
                this._StkInGuid = reader.GetGuid(_.StkInGuid);
            }
            if ((false == reader.IsDBNull(_.GCompanyID))) {
                this._GCompanyID = reader.GetGuid(_.GCompanyID);
            }
            if ((false == reader.IsDBNull(_.BuyerID))) {
                this._BuyerID = reader.GetInt32(_.BuyerID);
            }
            if ((false == reader.IsDBNull(_.BuyerName))) {
                this._BuyerName = reader.GetString(_.BuyerName);
            }
            if ((false == reader.IsDBNull(_.SourceBillGuid))) {
                this._SourceBillGuid = reader.GetGuid(_.SourceBillGuid);
            }
            if ((false == reader.IsDBNull(_.SourceBillLineGuid))) {
                this._SourceBillLineGuid = reader.GetGuid(_.SourceBillLineGuid);
            }
            if ((false == reader.IsDBNull(_.SOLineGuid))) {
                this._SOLineGuid = reader.GetGuid(_.SOLineGuid);
            }
            if ((false == reader.IsDBNull(_.ItemCode))) {
                this._ItemCode = reader.GetGuid(_.ItemCode);
            }
            if ((false == reader.IsDBNull(_.Model))) {
                this._Model = reader.GetString(_.Model);
            }
            if ((false == reader.IsDBNull(_.Brand))) {
                this._Brand = reader.GetString(_.Brand);
            }
            if ((false == reader.IsDBNull(_.Package))) {
                this._Package = reader.GetString(_.Package);
            }
            if ((false == reader.IsDBNull(_.Batch))) {
                this._Batch = reader.GetString(_.Batch);
            }
            if ((false == reader.IsDBNull(_.Quality))) {
                this._Quality = reader.GetString(_.Quality);
            }
            if ((false == reader.IsDBNull(_.MPQ))) {
                this._MPQ = reader.GetString(_.MPQ);
            }
            if ((false == reader.IsDBNull(_.MarkCode))) {
                this._MarkCode = reader.GetString(_.MarkCode);
            }
            if ((false == reader.IsDBNull(_.InvType))) {
                this._InvType = reader.GetString(_.InvType);
            }
            if ((false == reader.IsDBNull(_.Warehouse))) {
                this._Warehouse = reader.GetString(_.Warehouse);
            }
            if ((false == reader.IsDBNull(_.Location))) {
                this._Location = reader.GetString(_.Location);
            }
            if ((false == reader.IsDBNull(_.Qty))) {
                this._Qty = reader.GetInt32(_.Qty);
            }
            if ((false == reader.IsDBNull(_.BookedQty))) {
                this._BookedQty = reader.GetInt32(_.BookedQty);
            }
            if ((false == reader.IsDBNull(_.StkOutQty))) {
                this._StkOutQty = reader.GetInt32(_.StkOutQty);
            }
            if ((false == reader.IsDBNull(_.ReturnOccQty))) {
                this._ReturnOccQty = reader.GetInt32(_.ReturnOccQty);
            }
            if ((false == reader.IsDBNull(_.Unit))) {
                this._Unit = reader.GetString(_.Unit);
            }
            if ((false == reader.IsDBNull(_.UnitPrice))) {
                this._UnitPrice = reader.GetDecimal(_.UnitPrice);
            }
            if ((false == reader.IsDBNull(_.Freight))) {
                this._Freight = reader.GetDecimal(_.Freight);
            }
            if ((false == reader.IsDBNull(_.CostPrice))) {
                this._CostPrice = reader.GetDecimal(_.CostPrice);
            }
            if ((false == reader.IsDBNull(_.Currency))) {
                this._Currency = reader.GetString(_.Currency);
            }
            if ((false == reader.IsDBNull(_.ExchangeRate))) {
                this._ExchangeRate = reader.GetDecimal(_.ExchangeRate);
            }
            if ((false == reader.IsDBNull(_.TaxRate))) {
                this._TaxRate = reader.GetDecimal(_.TaxRate);
            }
            if ((false == reader.IsDBNull(_.IsRaiseTaxes))) {
                this._IsRaiseTaxes = reader.GetBoolean(_.IsRaiseTaxes);
            }
            if ((false == reader.IsDBNull(_.Amount))) {
                this._Amount = reader.GetDecimal(_.Amount);
            }
            if ((false == reader.IsDBNull(_.SCAmount))) {
                this._SCAmount = reader.GetDecimal(_.SCAmount);
            }
            if ((false == reader.IsDBNull(_.PaymentAmount))) {
                this._PaymentAmount = reader.GetDecimal(_.PaymentAmount);
            }
            if ((false == reader.IsDBNull(_.PayAmtDate))) {
                this._PayAmtDate = reader.GetDateTime(_.PayAmtDate);
            }
            if ((false == reader.IsDBNull(_.Demands))) {
                this._Demands = reader.GetString(_.Demands);
            }
            if ((false == reader.IsDBNull(_.Remark))) {
                this._Remark = reader.GetString(_.Remark);
            }
            if ((false == reader.IsDBNull(_.IsCut))) {
                this._IsCut = reader.GetBoolean(_.IsCut);
            }
            if ((false == reader.IsDBNull(_.IsPCut))) {
                this._IsPCut = reader.GetBoolean(_.IsPCut);
            }
            if ((false == reader.IsDBNull(_.IsGive))) {
                this._IsGive = reader.GetBoolean(_.IsGive);
            }
            if ((false == reader.IsDBNull(_.CreatedEmpID))) {
                this._CreatedEmpID = reader.GetInt32(_.CreatedEmpID);
            }
            if ((false == reader.IsDBNull(_.CreatedEmpName))) {
                this._CreatedEmpName = reader.GetString(_.CreatedEmpName);
            }
            if ((false == reader.IsDBNull(_.CreatedTime))) {
                this._CreatedTime = reader.GetDateTime(_.CreatedTime);
            }
            if ((false == reader.IsDBNull(_.UpdatedEmpID))) {
                this._UpdatedEmpID = reader.GetInt32(_.UpdatedEmpID);
            }
            if ((false == reader.IsDBNull(_.UpdatedEmpName))) {
                this._UpdatedEmpName = reader.GetString(_.UpdatedEmpName);
            }
            if ((false == reader.IsDBNull(_.UpdatedTime))) {
                this._UpdatedTime = reader.GetDateTime(_.UpdatedTime);
            }
            if ((false == reader.IsDBNull(_.IsDeleted))) {
                this._IsDeleted = reader.GetBoolean(_.IsDeleted);
            }
		}
		
	    public override int GetHashCode() {
            return base.GetHashCode();
        }
        
        public override bool Equals(object obj) {
            if ((obj == null)) {
                return false;
            }
            if ((false == typeof(STK_InLine).IsAssignableFrom(obj.GetType()))) {
                return false;
            }
            if ((((object)(this)) == ((object)(obj)))) {
                return true;
            }
            return false;
        }
		
        public class _ {
                
            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static AllField All = new AllField< STK_InLine >();
			
		    /// <summary>
            ///  - 字段名：StkInLineID - 数据类型：Int32?
            /// </summary>
            public static Field StkInLineID = new Field< STK_InLine >("StkInLineID");
		    /// <summary>
            /// 入库明细GUID - 字段名：StkInLineGuid - 数据类型：Guid?
            /// </summary>
            public static Field StkInLineGuid = new Field< STK_InLine >("StkInLineGuid");
		    /// <summary>
            /// 入库主单GUID - 字段名：StkInGuid - 数据类型：Guid?
            /// </summary>
            public static Field StkInGuid = new Field< STK_InLine >("StkInGuid");
		    /// <summary>
            ///  - 字段名：GCompanyID - 数据类型：Guid?
            /// </summary>
            public static Field GCompanyID = new Field< STK_InLine >("GCompanyID");
		    /// <summary>
            /// 采购员ID - 字段名：BuyerID - 数据类型：Int32?
            /// </summary>
            public static Field BuyerID = new Field< STK_InLine >("BuyerID");
		    /// <summary>
            /// 采购员 - 字段名：BuyerName - 数据类型：String
            /// </summary>
            public static Field BuyerName = new Field< STK_InLine >("BuyerName");
		    /// <summary>
            /// 关联单据主单GUID（采购单Guid ,销售退货单Guid） - 字段名：SourceBillGuid - 数据类型：Guid?
            /// </summary>
            public static Field SourceBillGuid = new Field< STK_InLine >("SourceBillGuid");
		    /// <summary>
            /// 关联单据明细GUID（采购明细Guid ,销售退货明细Guid） - 字段名：SourceBillLineGuid - 数据类型：Guid?
            /// </summary>
            public static Field SourceBillLineGuid = new Field< STK_InLine >("SourceBillLineGuid");
		    /// <summary>
            /// 销售明细Guid（只有订单采购的才填写，差异调整入库和销售退货入库不需要填写） - 字段名：SOLineGuid - 数据类型：Guid?
            /// </summary>
            public static Field SOLineGuid = new Field< STK_InLine >("SOLineGuid");
		    /// <summary>
            /// 库存ID - 字段名：ItemCode - 数据类型：Guid?
            /// </summary>
            public static Field ItemCode = new Field< STK_InLine >("ItemCode");
		    /// <summary>
            /// 型号 - 字段名：Model - 数据类型：String
            /// </summary>
            public static Field Model = new Field< STK_InLine >("Model");
		    /// <summary>
            /// 品牌 - 字段名：Brand - 数据类型：String
            /// </summary>
            public static Field Brand = new Field< STK_InLine >("Brand");
		    /// <summary>
            /// 封装 - 字段名：Package - 数据类型：String
            /// </summary>
            public static Field Package = new Field< STK_InLine >("Package");
		    /// <summary>
            /// 批号 - 字段名：Batch - 数据类型：String
            /// </summary>
            public static Field Batch = new Field< STK_InLine >("Batch");
		    /// <summary>
            /// 品质 - 字段名：Quality - 数据类型：String
            /// </summary>
            public static Field Quality = new Field< STK_InLine >("Quality");
		    /// <summary>
            /// 包装 - 字段名：MPQ - 数据类型：String
            /// </summary>
            public static Field MPQ = new Field< STK_InLine >("MPQ");
		    /// <summary>
            /// 标记码 - 字段名：MarkCode - 数据类型：String
            /// </summary>
            public static Field MarkCode = new Field< STK_InLine >("MarkCode");
		    /// <summary>
            /// 库存类型 - 字段名：InvType - 数据类型：String
            /// </summary>
            public static Field InvType = new Field< STK_InLine >("InvType");
		    /// <summary>
            /// 仓库 - 字段名：Warehouse - 数据类型：String
            /// </summary>
            public static Field Warehouse = new Field< STK_InLine >("Warehouse");
		    /// <summary>
            /// 位置 - 字段名：Location - 数据类型：String
            /// </summary>
            public static Field Location = new Field< STK_InLine >("Location");
		    /// <summary>
            /// 入库数量 - 字段名：Qty - 数据类型：Int32?
            /// </summary>
            public static Field Qty = new Field< STK_InLine >("Qty");
		    /// <summary>
            /// 预留数（预留时回写） - 字段名：BookedQty - 数据类型：Int32?
            /// </summary>
            public static Field BookedQty = new Field< STK_InLine >("BookedQty");
		    /// <summary>
            /// 出库数量 - 字段名：StkOutQty - 数据类型：Int32?
            /// </summary>
            public static Field StkOutQty = new Field< STK_InLine >("StkOutQty");
		    /// <summary>
            /// 采购退货占有数量 - 字段名：ReturnOccQty - 数据类型：Int32?
            /// </summary>
            public static Field ReturnOccQty = new Field< STK_InLine >("ReturnOccQty");
		    /// <summary>
            /// 单位 - 字段名：Unit - 数据类型：String
            /// </summary>
            public static Field Unit = new Field< STK_InLine >("Unit");
		    /// <summary>
            /// 采购进价 - 字段名：UnitPrice - 数据类型：Decimal?
            /// </summary>
            public static Field UnitPrice = new Field< STK_InLine >("UnitPrice");
		    /// <summary>
            /// 运费 - 字段名：Freight - 数据类型：Decimal?
            /// </summary>
            public static Field Freight = new Field< STK_InLine >("Freight");
		    /// <summary>
            /// 成本单价 - 字段名：CostPrice - 数据类型：Decimal?
            /// </summary>
            public static Field CostPrice = new Field< STK_InLine >("CostPrice");
		    /// <summary>
            /// 币种 - 字段名：Currency - 数据类型：String
            /// </summary>
            public static Field Currency = new Field< STK_InLine >("Currency");
		    /// <summary>
            /// 汇率 - 字段名：ExchangeRate - 数据类型：Decimal?
            /// </summary>
            public static Field ExchangeRate = new Field< STK_InLine >("ExchangeRate");
		    /// <summary>
            /// 税率 - 字段名：TaxRate - 数据类型：Decimal?
            /// </summary>
            public static Field TaxRate = new Field< STK_InLine >("TaxRate");
		    /// <summary>
            /// 是否已提税金 - 字段名：IsRaiseTaxes - 数据类型：Boolean?
            /// </summary>
            public static Field IsRaiseTaxes = new Field< STK_InLine >("IsRaiseTaxes");
		    /// <summary>
            /// 小计金额 - 字段名：Amount - 数据类型：Decimal?
            /// </summary>
            public static Field Amount = new Field< STK_InLine >("Amount");
		    /// <summary>
            /// 本币金额（RMB） - 字段名：SCAmount - 数据类型：Decimal?
            /// </summary>
            public static Field SCAmount = new Field< STK_InLine >("SCAmount");
		    /// <summary>
            /// 已付款金额 - 字段名：PaymentAmount - 数据类型：Decimal?
            /// </summary>
            public static Field PaymentAmount = new Field< STK_InLine >("PaymentAmount");
		    /// <summary>
            /// 付款日期 - 字段名：PayAmtDate - 数据类型：DateTime?
            /// </summary>
            public static Field PayAmtDate = new Field< STK_InLine >("PayAmtDate");
		    /// <summary>
            /// 采购要求 - 字段名：Demands - 数据类型：String
            /// </summary>
            public static Field Demands = new Field< STK_InLine >("Demands");
		    /// <summary>
            /// 备注 - 字段名：Remark - 数据类型：String
            /// </summary>
            public static Field Remark = new Field< STK_InLine >("Remark");
		    /// <summary>
            /// 是否纳入销售提成 - 字段名：IsCut - 数据类型：Boolean?
            /// </summary>
            public static Field IsCut = new Field< STK_InLine >("IsCut");
		    /// <summary>
            /// 是否纳入采购提成 - 字段名：IsPCut - 数据类型：Boolean?
            /// </summary>
            public static Field IsPCut = new Field< STK_InLine >("IsPCut");
		    /// <summary>
            /// 是否赠送 - 字段名：IsGive - 数据类型：Boolean?
            /// </summary>
            public static Field IsGive = new Field< STK_InLine >("IsGive");
		    /// <summary>
            ///  - 字段名：CreatedEmpID - 数据类型：Int32?
            /// </summary>
            public static Field CreatedEmpID = new Field< STK_InLine >("CreatedEmpID");
		    /// <summary>
            ///  - 字段名：CreatedEmpName - 数据类型：String
            /// </summary>
            public static Field CreatedEmpName = new Field< STK_InLine >("CreatedEmpName");
		    /// <summary>
            ///  - 字段名：CreatedTime - 数据类型：DateTime?
            /// </summary>
            public static Field CreatedTime = new Field< STK_InLine >("CreatedTime");
		    /// <summary>
            ///  - 字段名：UpdatedEmpID - 数据类型：Int32?
            /// </summary>
            public static Field UpdatedEmpID = new Field< STK_InLine >("UpdatedEmpID");
		    /// <summary>
            ///  - 字段名：UpdatedEmpName - 数据类型：String
            /// </summary>
            public static Field UpdatedEmpName = new Field< STK_InLine >("UpdatedEmpName");
		    /// <summary>
            ///  - 字段名：UpdatedTime - 数据类型：DateTime?
            /// </summary>
            public static Field UpdatedTime = new Field< STK_InLine >("UpdatedTime");
		    /// <summary>
            /// 删除标记 - 字段名：IsDeleted - 数据类型：Boolean?
            /// </summary>
            public static Field IsDeleted = new Field< STK_InLine >("IsDeleted");
		}
	}
}
