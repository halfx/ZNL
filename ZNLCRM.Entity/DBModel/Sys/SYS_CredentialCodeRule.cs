//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//
//     Creater: Administrator
//     Date:    2014/9/25
//     Time:    11:53
//     Version: 4.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

/// <summary>
/// CodeSmith自动生成的实体
/// </summary>
namespace ZNLCRM.Entity.DBModel
{
    using System;
    using MySoft.Data;
    using ZNLCRM.Utility;
    using ZNLFrame.Entity;
    /// <summary>
    /// 表名：SYS_CredentialCodeRule 主键列：RuleID
    /// </summary>
    [SerializableAttribute()]
    public partial class SYS_CredentialCodeRule : BaseEntity
    {
        #region Private Properties

        private Int32 _RuleID;
        private Guid? _GCompanyID;
        private String _CredentialName;
        private Boolean? _IsOrderNo;
        private String _TableName;
        private String _CodeFieldName;
        private String _Prefix;
        private String _Suffix;
        private Int32? _InitialValue;
        private Boolean? _IsContinuous;
        private Int32? _Length;
        private Boolean? _IsManualInput;
        private Int32? _ModuleID;
        private String _ModuleName;
        private Boolean? _IsDeleted;

        #endregion

        #region Public Properties

        /// <summary>
        /// 规则ID.
        /// </summary>
        public Int32 RuleID
        {
            get
            {
                return _RuleID;
            }
            set
            {
                this.OnPropertyValueChange(_.RuleID, _RuleID, value);
                this._RuleID = value;
            }
        }

        /// <summary>
        /// 公司GUID.
        /// </summary>
        public Guid? GCompanyID
        {
            get
            {
                return this._GCompanyID;
            }
            set
            {
                this.OnPropertyValueChange(_.GCompanyID, _GCompanyID, value);
                this._GCompanyID = value;
            }
        }

        /// <summary>
        /// 单据名称.
        /// </summary>
        public String CredentialName
        {
            get
            {
                return this._CredentialName;
            }
            set
            {
                this.OnPropertyValueChange(_.CredentialName, _CredentialName, value);
                this._CredentialName = value.SubStr(50);
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public Boolean? IsOrderNo
        {
            get
            {
                return this._IsOrderNo;
            }
            set
            {
                this.OnPropertyValueChange(_.IsOrderNo, _IsOrderNo, value);
                this._IsOrderNo = value;
            }
        }

        /// <summary>
        /// 表名.
        /// </summary>
        public String TableName
        {
            get
            {
                return this._TableName;
            }
            set
            {
                this.OnPropertyValueChange(_.TableName, _TableName, value);
                this._TableName = value.SubStr(50);
            }
        }

        /// <summary>
        /// 编号字段.
        /// </summary>
        public String CodeFieldName
        {
            get
            {
                return this._CodeFieldName;
            }
            set
            {
                this.OnPropertyValueChange(_.CodeFieldName, _CodeFieldName, value);
                this._CodeFieldName = value.SubStr(50);
            }
        }

        /// <summary>
        /// 前缀.
        /// </summary>
        public String Prefix
        {
            get
            {
                return this._Prefix;
            }
            set
            {
                this.OnPropertyValueChange(_.Prefix, _Prefix, value);
                this._Prefix = value.SubStr(50);
            }
        }

        /// <summary>
        /// 后缀.
        /// </summary>
        public String Suffix
        {
            get
            {
                return this._Suffix;
            }
            set
            {
                this.OnPropertyValueChange(_.Suffix, _Suffix, value);
                this._Suffix = value.SubStr(50);
            }
        }

        /// <summary>
        /// 初始值.
        /// </summary>
        public Int32? InitialValue
        {
            get
            {
                return this._InitialValue;
            }
            set
            {
                this.OnPropertyValueChange(_.InitialValue, _InitialValue, value);
                this._InitialValue = value;
            }
        }

        /// <summary>
        /// 是否连续.
        /// </summary>
        public Boolean? IsContinuous
        {
            get
            {
                return this._IsContinuous;
            }
            set
            {
                this.OnPropertyValueChange(_.IsContinuous, _IsContinuous, value);
                this._IsContinuous = value;
            }
        }

        /// <summary>
        /// 编号长度.
        /// </summary>
        public Int32? Length
        {
            get
            {
                return this._Length;
            }
            set
            {
                this.OnPropertyValueChange(_.Length, _Length, value);
                this._Length = value;
            }
        }

        /// <summary>
        /// 是否手工录入.
        /// </summary>
        public Boolean? IsManualInput
        {
            get
            {
                return this._IsManualInput;
            }
            set
            {
                this.OnPropertyValueChange(_.IsManualInput, _IsManualInput, value);
                this._IsManualInput = value;
            }
        }

        /// <summary>
        /// 模块ID.
        /// </summary>
        public Int32? ModuleID
        {
            get
            {
                return this._ModuleID;
            }
            set
            {
                this.OnPropertyValueChange(_.ModuleID, _ModuleID, value);
                this._ModuleID = value;
            }
        }

        /// <summary>
        /// 模块名称.
        /// </summary>
        public String ModuleName
        {
            get
            {
                return this._ModuleName;
            }
            set
            {
                this.OnPropertyValueChange(_.ModuleName, _ModuleName, value);
                this._ModuleName = value.SubStr(50);
            }
        }

        /// <summary>
        /// 是否删除(0:1已删除).
        /// </summary>
        public Boolean? IsDeleted
        {
            get
            {
                return this._IsDeleted;
            }
            set
            {
                this.OnPropertyValueChange(_.IsDeleted, _IsDeleted, value);
                this._IsDeleted = value;
            }
        }

        #endregion
        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override Table GetTable()
        {
            return new Table<SYS_CredentialCodeRule>("SYS_CredentialCodeRule");
        }

        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override Field GetIdentityField()
        {
            return _.RuleID;
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.RuleID
			};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override Field[] GetFields()
        {
            return new Field[] {
				_.RuleID,		
				_.GCompanyID,		
				_.CredentialName,		
				_.IsOrderNo,		
				_.TableName,		
				_.CodeFieldName,		
				_.Prefix,		
				_.Suffix,		
				_.InitialValue,		
				_.IsContinuous,		
				_.Length,		
				_.IsManualInput,		
				_.ModuleID,		
				_.ModuleName,		
				_.IsDeleted		
			};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
				this._RuleID,		
				this._GCompanyID,		
				this._CredentialName,		
				this._IsOrderNo,		
				this._TableName,		
				this._CodeFieldName,		
				this._Prefix,		
				this._Suffix,		
				this._InitialValue,		
				this._IsContinuous,		
				this._Length,		
				this._IsManualInput,		
				this._ModuleID,		
				this._ModuleName,		
				this._IsDeleted		
			};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.RuleID)))
            {
                this._RuleID = reader.GetInt32(_.RuleID);
            }
            if ((false == reader.IsDBNull(_.GCompanyID)))
            {
                this._GCompanyID = reader.GetGuid(_.GCompanyID);
            }
            if ((false == reader.IsDBNull(_.CredentialName)))
            {
                this._CredentialName = reader.GetString(_.CredentialName);
            }
            if ((false == reader.IsDBNull(_.IsOrderNo)))
            {
                this._IsOrderNo = reader.GetBoolean(_.IsOrderNo);
            }
            if ((false == reader.IsDBNull(_.TableName)))
            {
                this._TableName = reader.GetString(_.TableName);
            }
            if ((false == reader.IsDBNull(_.CodeFieldName)))
            {
                this._CodeFieldName = reader.GetString(_.CodeFieldName);
            }
            if ((false == reader.IsDBNull(_.Prefix)))
            {
                this._Prefix = reader.GetString(_.Prefix);
            }
            if ((false == reader.IsDBNull(_.Suffix)))
            {
                this._Suffix = reader.GetString(_.Suffix);
            }
            if ((false == reader.IsDBNull(_.InitialValue)))
            {
                this._InitialValue = reader.GetInt32(_.InitialValue);
            }
            if ((false == reader.IsDBNull(_.IsContinuous)))
            {
                this._IsContinuous = reader.GetBoolean(_.IsContinuous);
            }
            if ((false == reader.IsDBNull(_.Length)))
            {
                this._Length = reader.GetInt32(_.Length);
            }
            if ((false == reader.IsDBNull(_.IsManualInput)))
            {
                this._IsManualInput = reader.GetBoolean(_.IsManualInput);
            }
            if ((false == reader.IsDBNull(_.ModuleID)))
            {
                this._ModuleID = reader.GetInt32(_.ModuleID);
            }
            if ((false == reader.IsDBNull(_.ModuleName)))
            {
                this._ModuleName = reader.GetString(_.ModuleName);
            }
            if ((false == reader.IsDBNull(_.IsDeleted)))
            {
                this._IsDeleted = reader.GetBoolean(_.IsDeleted);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(SYS_CredentialCodeRule).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static AllField All = new AllField<SYS_CredentialCodeRule>();

            /// <summary>
            /// 规则ID - 字段名：RuleID - 数据类型：Int32?
            /// </summary>
            public static Field RuleID = new Field<SYS_CredentialCodeRule>("RuleID");
            /// <summary>
            /// 公司GUID - 字段名：GCompanyID - 数据类型：Guid?
            /// </summary>
            public static Field GCompanyID = new Field<SYS_CredentialCodeRule>("GCompanyID");
            /// <summary>
            /// 单据名称 - 字段名：CredentialName - 数据类型：String
            /// </summary>
            public static Field CredentialName = new Field<SYS_CredentialCodeRule>("CredentialName");
            /// <summary>
            ///  - 字段名：IsOrderNo - 数据类型：Boolean?
            /// </summary>
            public static Field IsOrderNo = new Field<SYS_CredentialCodeRule>("IsOrderNo");
            /// <summary>
            /// 表名 - 字段名：TableName - 数据类型：String
            /// </summary>
            public static Field TableName = new Field<SYS_CredentialCodeRule>("TableName");
            /// <summary>
            /// 编号字段 - 字段名：CodeFieldName - 数据类型：String
            /// </summary>
            public static Field CodeFieldName = new Field<SYS_CredentialCodeRule>("CodeFieldName");
            /// <summary>
            /// 前缀 - 字段名：Prefix - 数据类型：String
            /// </summary>
            public static Field Prefix = new Field<SYS_CredentialCodeRule>("Prefix");
            /// <summary>
            /// 后缀 - 字段名：Suffix - 数据类型：String
            /// </summary>
            public static Field Suffix = new Field<SYS_CredentialCodeRule>("Suffix");
            /// <summary>
            /// 初始值 - 字段名：InitialValue - 数据类型：Int32?
            /// </summary>
            public static Field InitialValue = new Field<SYS_CredentialCodeRule>("InitialValue");
            /// <summary>
            /// 是否连续 - 字段名：IsContinuous - 数据类型：Boolean?
            /// </summary>
            public static Field IsContinuous = new Field<SYS_CredentialCodeRule>("IsContinuous");
            /// <summary>
            /// 编号长度 - 字段名：Length - 数据类型：Int32?
            /// </summary>
            public static Field Length = new Field<SYS_CredentialCodeRule>("Length");
            /// <summary>
            /// 是否手工录入 - 字段名：IsManualInput - 数据类型：Boolean?
            /// </summary>
            public static Field IsManualInput = new Field<SYS_CredentialCodeRule>("IsManualInput");
            /// <summary>
            /// 模块ID - 字段名：ModuleID - 数据类型：Int32?
            /// </summary>
            public static Field ModuleID = new Field<SYS_CredentialCodeRule>("ModuleID");
            /// <summary>
            /// 模块名称 - 字段名：ModuleName - 数据类型：String
            /// </summary>
            public static Field ModuleName = new Field<SYS_CredentialCodeRule>("ModuleName");
            /// <summary>
            /// 是否删除(0:1已删除) - 字段名：IsDeleted - 数据类型：Boolean?
            /// </summary>
            public static Field IsDeleted = new Field<SYS_CredentialCodeRule>("IsDeleted");
        }
    }
}
