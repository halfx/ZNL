//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//
//     Creater: Administrator
//     Date:    2015/1/23
//     Time:    10:16
//     Version: 4.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

/// <summary>
/// CodeSmith自动生成的实体
/// </summary>
namespace ZNLCRM.Entity.DBModel
{
    using System;
    using MySoft.Data;
    using ZNLCRM.Utility;
    using ZNLFrame.Entity;
    /// <summary>
    /// 表名：SYS_ChargeRecord 主键列：CRID
    /// </summary>
    [SerializableAttribute()]
    public partial class SYS_ChargeRecord : BaseEntity
    {
        #region Private Properties

        private Int32 _CRID;
        private Guid? _CompanyID;
        private String _CompanyName;
        private Int32? _CompanyType;
        private Int32? _ChargeType;
        private Int32? _UserCount;
        private Int32? _ComAges;
        private Decimal? _ComPercent;
        private Int32? _UBoxCnt;
        private DateTime? _ChargeStartTime;
        private DateTime? _ChargeEndTime;
        private Decimal? _SignAmount;
        private Decimal? _Deductible;
        private Decimal? _Amount;
        private Decimal? _ComAmount;
        private String _Remark;
        private Int32? _SalesID;
        private String _SalesName;
        private Boolean? _IsAudited;
        private DateTime? _AuditedTime;
        private Int32? _AuditedByID;
        private String _AuditedByName;
        private DateTime? _CreatedTime;
        private Int32? _CreatedByID;
        private String _CreatedByName;
        private Int32? _IsActive;
        private Boolean? _IsDeleted;

        #endregion

        #region Public Properties

        /// <summary>
        /// 收费记录ID.
        /// </summary>
        public Int32 CRID
        {
            get
            {
                return _CRID;
            }
            set
            {
                this.OnPropertyValueChange(_.CRID, _CRID, value);
                this._CRID = value;
            }
        }

        /// <summary>
        /// 注册公司ID.
        /// </summary>
        public Guid? CompanyID
        {
            get
            {
                return this._CompanyID;
            }
            set
            {
                this.OnPropertyValueChange(_.CompanyID, _CompanyID, value);
                this._CompanyID = value;
            }
        }

        /// <summary>
        /// 公司名称.
        /// </summary>
        public String CompanyName
        {
            get
            {
                return this._CompanyName;
            }
            set
            {
                this.OnPropertyValueChange(_.CompanyName, _CompanyName, value);
                this._CompanyName = value.SubStr(100);
            }
        }

        /// <summary>
        /// 公司类型.
        /// </summary>
        public Int32? CompanyType
        {
            get
            {
                return this._CompanyType;
            }
            set
            {
                this.OnPropertyValueChange(_.CompanyType, _CompanyType, value);
                this._CompanyType = value;
            }
        }

        /// <summary>
        /// 收费类型(1.充值,2.增加用户数,3.减少用户数,4.续费,5.试用,6.新签,7.买断,8.转断,9.赠送,10.购买).
        /// </summary>
        public Int32? ChargeType
        {
            get
            {
                return this._ChargeType;
            }
            set
            {
                this.OnPropertyValueChange(_.ChargeType, _ChargeType, value);
                this._ChargeType = value;
            }
        }

        /// <summary>
        /// 用户数.
        /// </summary>
        public Int32? UserCount
        {
            get
            {
                return this._UserCount;
            }
            set
            {
                this.OnPropertyValueChange(_.UserCount, _UserCount, value);
                this._UserCount = value;
            }
        }

        /// <summary>
        /// 提成年限(只有快捷版客户才有用).
        /// </summary>
        public Int32? ComAges
        {
            get
            {
                return this._ComAges;
            }
            set
            {
                this.OnPropertyValueChange(_.ComAges, _ComAges, value);
                this._ComAges = value;
            }
        }

        /// <summary>
        /// 提成比例.
        /// </summary>
        public Decimal? ComPercent
        {
            get
            {
                return this._ComPercent;
            }
            set
            {
                this.OnPropertyValueChange(_.ComPercent, _ComPercent, value);
                this._ComPercent = value;
            }
        }

        /// <summary>
        /// 电话盒个数.
        /// </summary>
        public Int32? UBoxCnt
        {
            get
            {
                return this._UBoxCnt;
            }
            set
            {
                this.OnPropertyValueChange(_.UBoxCnt, _UBoxCnt, value);
                this._UBoxCnt = value;
            }
        }

        /// <summary>
        /// 开始计费时间.
        /// </summary>
        public DateTime? ChargeStartTime
        {
            get
            {
                return this._ChargeStartTime;
            }
            set
            {
                this.OnPropertyValueChange(_.ChargeStartTime, _ChargeStartTime, value);
                this._ChargeStartTime = value;
            }
        }

        /// <summary>
        /// 结束计费时间.
        /// </summary>
        public DateTime? ChargeEndTime
        {
            get
            {
                return this._ChargeEndTime;
            }
            set
            {
                this.OnPropertyValueChange(_.ChargeEndTime, _ChargeEndTime, value);
                this._ChargeEndTime = value;
            }
        }

        /// <summary>
        /// 签单金额.
        /// </summary>
        public Decimal? SignAmount
        {
            get
            {
                return this._SignAmount;
            }
            set
            {
                this.OnPropertyValueChange(_.SignAmount, _SignAmount, value);
                this._SignAmount = value;
            }
        }

        /// <summary>
        /// 抵扣金额.
        /// </summary>
        public Decimal? Deductible
        {
            get
            {
                return this._Deductible;
            }
            set
            {
                this.OnPropertyValueChange(_.Deductible, _Deductible, value);
                this._Deductible = value;
            }
        }

        /// <summary>
        /// 金额.
        /// </summary>
        public Decimal? Amount
        {
            get
            {
                return this._Amount;
            }
            set
            {
                this.OnPropertyValueChange(_.Amount, _Amount, value);
                this._Amount = value;
            }
        }

        /// <summary>
        /// 提成金额.
        /// </summary>
        public Decimal? ComAmount
        {
            get
            {
                return this._ComAmount;
            }
            set
            {
                this.OnPropertyValueChange(_.ComAmount, _ComAmount, value);
                this._ComAmount = value;
            }
        }

        /// <summary>
        /// 备注.
        /// </summary>
        public String Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                this.OnPropertyValueChange(_.Remark, _Remark, value);
                this._Remark = value.SubStr(300);
            }
        }

        /// <summary>
        /// 业务员ID.
        /// </summary>
        public Int32? SalesID
        {
            get
            {
                return this._SalesID;
            }
            set
            {
                this.OnPropertyValueChange(_.SalesID, _SalesID, value);
                this._SalesID = value;
            }
        }

        /// <summary>
        /// 业务员名称.
        /// </summary>
        public String SalesName
        {
            get
            {
                return this._SalesName;
            }
            set
            {
                this.OnPropertyValueChange(_.SalesName, _SalesName, value);
                this._SalesName = value.SubStr(50);
            }
        }

        /// <summary>
        /// 是否审核.
        /// </summary>
        public Boolean? IsAudited
        {
            get
            {
                return this._IsAudited;
            }
            set
            {
                this.OnPropertyValueChange(_.IsAudited, _IsAudited, value);
                this._IsAudited = value;
            }
        }

        /// <summary>
        /// 审核时间.
        /// </summary>
        public DateTime? AuditedTime
        {
            get
            {
                return this._AuditedTime;
            }
            set
            {
                this.OnPropertyValueChange(_.AuditedTime, _AuditedTime, value);
                this._AuditedTime = value;
            }
        }

        /// <summary>
        /// 审核人ID.
        /// </summary>
        public Int32? AuditedByID
        {
            get
            {
                return this._AuditedByID;
            }
            set
            {
                this.OnPropertyValueChange(_.AuditedByID, _AuditedByID, value);
                this._AuditedByID = value;
            }
        }

        /// <summary>
        /// 审核人.
        /// </summary>
        public String AuditedByName
        {
            get
            {
                return this._AuditedByName;
            }
            set
            {
                this.OnPropertyValueChange(_.AuditedByName, _AuditedByName, value);
                this._AuditedByName = value.SubStr(50);
            }
        }

        /// <summary>
        /// 创建时间.
        /// </summary>
        public DateTime? CreatedTime
        {
            get
            {
                return this._CreatedTime;
            }
            set
            {
                this.OnPropertyValueChange(_.CreatedTime, _CreatedTime, value);
                this._CreatedTime = value;
            }
        }

        /// <summary>
        /// 创建人ID.
        /// </summary>
        public Int32? CreatedByID
        {
            get
            {
                return this._CreatedByID;
            }
            set
            {
                this.OnPropertyValueChange(_.CreatedByID, _CreatedByID, value);
                this._CreatedByID = value;
            }
        }

        /// <summary>
        /// 创建人名称.
        /// </summary>
        public String CreatedByName
        {
            get
            {
                return this._CreatedByName;
            }
            set
            {
                this.OnPropertyValueChange(_.CreatedByName, _CreatedByName, value);
                this._CreatedByName = value.SubStr(50);
            }
        }

        /// <summary>
        /// 是否启用(1:禁用，2:启用，4:删除).
        /// </summary>
        public Int32? IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                this.OnPropertyValueChange(_.IsActive, _IsActive, value);
                this._IsActive = value;
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public Boolean? IsDeleted
        {
            get
            {
                return this._IsDeleted;
            }
            set
            {
                this.OnPropertyValueChange(_.IsDeleted, _IsDeleted, value);
                this._IsDeleted = value;
            }
        }

        #endregion
        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override Table GetTable()
        {
            return new Table<SYS_ChargeRecord>("SYS_ChargeRecord");
        }

        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override Field GetIdentityField()
        {
            return _.CRID;
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.CRID
			};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override Field[] GetFields()
        {
            return new Field[] {
				_.CRID,		
				_.CompanyID,		
				_.CompanyName,		
				_.CompanyType,		
				_.ChargeType,		
				_.UserCount,		
				_.ComAges,		
				_.ComPercent,		
				_.UBoxCnt,		
				_.ChargeStartTime,		
				_.ChargeEndTime,		
				_.SignAmount,		
				_.Deductible,		
				_.Amount,		
				_.ComAmount,		
				_.Remark,		
				_.SalesID,		
				_.SalesName,		
				_.IsAudited,		
				_.AuditedTime,		
				_.AuditedByID,		
				_.AuditedByName,		
				_.CreatedTime,		
				_.CreatedByID,		
				_.CreatedByName,		
				_.IsActive,		
				_.IsDeleted		
			};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
				this._CRID,		
				this._CompanyID,		
				this._CompanyName,		
				this._CompanyType,		
				this._ChargeType,		
				this._UserCount,		
				this._ComAges,		
				this._ComPercent,		
				this._UBoxCnt,		
				this._ChargeStartTime,		
				this._ChargeEndTime,		
				this._SignAmount,		
				this._Deductible,		
				this._Amount,		
				this._ComAmount,		
				this._Remark,		
				this._SalesID,		
				this._SalesName,		
				this._IsAudited,		
				this._AuditedTime,		
				this._AuditedByID,		
				this._AuditedByName,		
				this._CreatedTime,		
				this._CreatedByID,		
				this._CreatedByName,		
				this._IsActive,		
				this._IsDeleted		
			};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.CRID)))
            {
                this._CRID = reader.GetInt32(_.CRID);
            }
            if ((false == reader.IsDBNull(_.CompanyID)))
            {
                this._CompanyID = reader.GetGuid(_.CompanyID);
            }
            if ((false == reader.IsDBNull(_.CompanyName)))
            {
                this._CompanyName = reader.GetString(_.CompanyName);
            }
            if ((false == reader.IsDBNull(_.CompanyType)))
            {
                this._CompanyType = reader.GetInt32(_.CompanyType);
            }
            if ((false == reader.IsDBNull(_.ChargeType)))
            {
                this._ChargeType = reader.GetInt32(_.ChargeType);
            }
            if ((false == reader.IsDBNull(_.UserCount)))
            {
                this._UserCount = reader.GetInt32(_.UserCount);
            }
            if ((false == reader.IsDBNull(_.ComAges)))
            {
                this._ComAges = reader.GetInt32(_.ComAges);
            }
            if ((false == reader.IsDBNull(_.ComPercent)))
            {
                this._ComPercent = reader.GetDecimal(_.ComPercent);
            }
            if ((false == reader.IsDBNull(_.UBoxCnt)))
            {
                this._UBoxCnt = reader.GetInt32(_.UBoxCnt);
            }
            if ((false == reader.IsDBNull(_.ChargeStartTime)))
            {
                this._ChargeStartTime = reader.GetDateTime(_.ChargeStartTime);
            }
            if ((false == reader.IsDBNull(_.ChargeEndTime)))
            {
                this._ChargeEndTime = reader.GetDateTime(_.ChargeEndTime);
            }
            if ((false == reader.IsDBNull(_.SignAmount)))
            {
                this._SignAmount = reader.GetDecimal(_.SignAmount);
            }
            if ((false == reader.IsDBNull(_.Deductible)))
            {
                this._Deductible = reader.GetDecimal(_.Deductible);
            }
            if ((false == reader.IsDBNull(_.Amount)))
            {
                this._Amount = reader.GetDecimal(_.Amount);
            }
            if ((false == reader.IsDBNull(_.ComAmount)))
            {
                this._ComAmount = reader.GetDecimal(_.ComAmount);
            }
            if ((false == reader.IsDBNull(_.Remark)))
            {
                this._Remark = reader.GetString(_.Remark);
            }
            if ((false == reader.IsDBNull(_.SalesID)))
            {
                this._SalesID = reader.GetInt32(_.SalesID);
            }
            if ((false == reader.IsDBNull(_.SalesName)))
            {
                this._SalesName = reader.GetString(_.SalesName);
            }
            if ((false == reader.IsDBNull(_.IsAudited)))
            {
                this._IsAudited = reader.GetBoolean(_.IsAudited);
            }
            if ((false == reader.IsDBNull(_.AuditedTime)))
            {
                this._AuditedTime = reader.GetDateTime(_.AuditedTime);
            }
            if ((false == reader.IsDBNull(_.AuditedByID)))
            {
                this._AuditedByID = reader.GetInt32(_.AuditedByID);
            }
            if ((false == reader.IsDBNull(_.AuditedByName)))
            {
                this._AuditedByName = reader.GetString(_.AuditedByName);
            }
            if ((false == reader.IsDBNull(_.CreatedTime)))
            {
                this._CreatedTime = reader.GetDateTime(_.CreatedTime);
            }
            if ((false == reader.IsDBNull(_.CreatedByID)))
            {
                this._CreatedByID = reader.GetInt32(_.CreatedByID);
            }
            if ((false == reader.IsDBNull(_.CreatedByName)))
            {
                this._CreatedByName = reader.GetString(_.CreatedByName);
            }
            if ((false == reader.IsDBNull(_.IsActive)))
            {
                this._IsActive = reader.GetInt32(_.IsActive);
            }
            if ((false == reader.IsDBNull(_.IsDeleted)))
            {
                this._IsDeleted = reader.GetBoolean(_.IsDeleted);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(SYS_ChargeRecord).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static AllField All = new AllField<SYS_ChargeRecord>();

            /// <summary>
            /// 收费记录ID - 字段名：CRID - 数据类型：Int32?
            /// </summary>
            public static Field CRID = new Field<SYS_ChargeRecord>("CRID");
            /// <summary>
            /// 注册公司ID - 字段名：CompanyID - 数据类型：Guid?
            /// </summary>
            public static Field CompanyID = new Field<SYS_ChargeRecord>("CompanyID");
            /// <summary>
            /// 公司名称 - 字段名：CompanyName - 数据类型：String
            /// </summary>
            public static Field CompanyName = new Field<SYS_ChargeRecord>("CompanyName");
            /// <summary>
            /// 公司类型 - 字段名：CompanyType - 数据类型：Int32?
            /// </summary>
            public static Field CompanyType = new Field<SYS_ChargeRecord>("CompanyType");
            /// <summary>
            /// 收费类型(1.充值,2.增加用户数,3.减少用户数,4.续费,5.试用,6.新签,7.买断,8.转断,9.赠送,10.购买) - 字段名：ChargeType - 数据类型：Int32?
            /// </summary>
            public static Field ChargeType = new Field<SYS_ChargeRecord>("ChargeType");
            /// <summary>
            /// 用户数 - 字段名：UserCount - 数据类型：Int32?
            /// </summary>
            public static Field UserCount = new Field<SYS_ChargeRecord>("UserCount");
            /// <summary>
            /// 提成年限(只有快捷版客户才有用) - 字段名：ComAges - 数据类型：Int32?
            /// </summary>
            public static Field ComAges = new Field<SYS_ChargeRecord>("ComAges");
            /// <summary>
            /// 提成比例 - 字段名：ComPercent - 数据类型：Decimal?
            /// </summary>
            public static Field ComPercent = new Field<SYS_ChargeRecord>("ComPercent");
            /// <summary>
            /// 电话盒个数 - 字段名：UBoxCnt - 数据类型：Int32?
            /// </summary>
            public static Field UBoxCnt = new Field<SYS_ChargeRecord>("UBoxCnt");
            /// <summary>
            /// 开始计费时间 - 字段名：ChargeStartTime - 数据类型：DateTime?
            /// </summary>
            public static Field ChargeStartTime = new Field<SYS_ChargeRecord>("ChargeStartTime");
            /// <summary>
            /// 结束计费时间 - 字段名：ChargeEndTime - 数据类型：DateTime?
            /// </summary>
            public static Field ChargeEndTime = new Field<SYS_ChargeRecord>("ChargeEndTime");
            /// <summary>
            /// 签单金额 - 字段名：SignAmount - 数据类型：Decimal?
            /// </summary>
            public static Field SignAmount = new Field<SYS_ChargeRecord>("SignAmount");
            /// <summary>
            /// 抵扣金额 - 字段名：Deductible - 数据类型：Decimal?
            /// </summary>
            public static Field Deductible = new Field<SYS_ChargeRecord>("Deductible");
            /// <summary>
            /// 金额 - 字段名：Amount - 数据类型：Decimal?
            /// </summary>
            public static Field Amount = new Field<SYS_ChargeRecord>("Amount");
            /// <summary>
            /// 提成金额 - 字段名：ComAmount - 数据类型：Decimal?
            /// </summary>
            public static Field ComAmount = new Field<SYS_ChargeRecord>("ComAmount");
            /// <summary>
            /// 备注 - 字段名：Remark - 数据类型：String
            /// </summary>
            public static Field Remark = new Field<SYS_ChargeRecord>("Remark");
            /// <summary>
            /// 业务员ID - 字段名：SalesID - 数据类型：Int32?
            /// </summary>
            public static Field SalesID = new Field<SYS_ChargeRecord>("SalesID");
            /// <summary>
            /// 业务员名称 - 字段名：SalesName - 数据类型：String
            /// </summary>
            public static Field SalesName = new Field<SYS_ChargeRecord>("SalesName");
            /// <summary>
            /// 是否审核 - 字段名：IsAudited - 数据类型：Boolean?
            /// </summary>
            public static Field IsAudited = new Field<SYS_ChargeRecord>("IsAudited");
            /// <summary>
            /// 审核时间 - 字段名：AuditedTime - 数据类型：DateTime?
            /// </summary>
            public static Field AuditedTime = new Field<SYS_ChargeRecord>("AuditedTime");
            /// <summary>
            /// 审核人ID - 字段名：AuditedByID - 数据类型：Int32?
            /// </summary>
            public static Field AuditedByID = new Field<SYS_ChargeRecord>("AuditedByID");
            /// <summary>
            /// 审核人 - 字段名：AuditedByName - 数据类型：String
            /// </summary>
            public static Field AuditedByName = new Field<SYS_ChargeRecord>("AuditedByName");
            /// <summary>
            /// 创建时间 - 字段名：CreatedTime - 数据类型：DateTime?
            /// </summary>
            public static Field CreatedTime = new Field<SYS_ChargeRecord>("CreatedTime");
            /// <summary>
            /// 创建人ID - 字段名：CreatedByID - 数据类型：Int32?
            /// </summary>
            public static Field CreatedByID = new Field<SYS_ChargeRecord>("CreatedByID");
            /// <summary>
            /// 创建人名称 - 字段名：CreatedByName - 数据类型：String
            /// </summary>
            public static Field CreatedByName = new Field<SYS_ChargeRecord>("CreatedByName");
            /// <summary>
            /// 是否启用(1:禁用，2:启用，4:删除) - 字段名：IsActive - 数据类型：Int32?
            /// </summary>
            public static Field IsActive = new Field<SYS_ChargeRecord>("IsActive");
            /// <summary>
            ///  - 字段名：IsDeleted - 数据类型：Boolean?
            /// </summary>
            public static Field IsDeleted = new Field<SYS_ChargeRecord>("IsDeleted");
        }
    }
}
