//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//
//     Creater: Administrator
//     Date:    2015/1/23
//     Time:    18:32
//     Version: 4.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

/// <summary>
/// CodeSmith自动生成的实体
/// </summary>
namespace ZNLCRM.Entity.DBModel
{
    using System;
    using MySoft.Data;
    using ZNLCRM.Utility;
    using ZNLFrame.Entity;
    /// <summary>
    /// 表名：SYS_UserAccount 主键列：UserID
    /// </summary>
    [SerializableAttribute()]
    public partial class SYS_UserAccount : BaseEntity
    {
        #region Private Properties

        private Int32 _UserID;
        private Guid? _UserGUID;
        private Guid? _GCompanyID;
        private String _Account;
        private String _PWD;
        private String _Remark;
        private Int32? _EmpID;
        private Boolean? _NeedValidate;
        private String _UseTimeBegin;
        private String _UseTimeOver;
        private String _MacAddress;
        private String _HardDiskSN;
        private Int32? _SignInTimes;
        private DateTime? _LastSignTime;
        private String _LastSignIP;
        private DateTime? _AfterTimeForBill;
        private Int32? _IsActive;
        private DateTime? _CreatedTime;
        private Int32? _CreatedByID;
        private String _CreatedByName;
        private Boolean? _IsDeleted;

        #endregion

        #region Public Properties

        /// <summary>
        /// 用户ID.
        /// </summary>
        public Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                this.OnPropertyValueChange(_.UserID, _UserID, value);
                this._UserID = value;
            }
        }

        /// <summary>
        /// 用户UGID.
        /// </summary>
        public Guid? UserGUID
        {
            get
            {
                return this._UserGUID;
            }
            set
            {
                this.OnPropertyValueChange(_.UserGUID, _UserGUID, value);
                this._UserGUID = value;
            }
        }

        /// <summary>
        /// 唯一标识.
        /// </summary>
        public Guid? GCompanyID
        {
            get
            {
                return this._GCompanyID;
            }
            set
            {
                this.OnPropertyValueChange(_.GCompanyID, _GCompanyID, value);
                this._GCompanyID = value;
            }
        }

        /// <summary>
        /// 登录帐号.
        /// </summary>
        public String Account
        {
            get
            {
                return this._Account;
            }
            set
            {
                this.OnPropertyValueChange(_.Account, _Account, value);
                this._Account = value.SubStr(50);
            }
        }

        /// <summary>
        /// 用户密码.
        /// </summary>
        public String PWD
        {
            get
            {
                return this._PWD;
            }
            set
            {
                this.OnPropertyValueChange(_.PWD, _PWD, value);
                this._PWD = value.SubStr(50);
            }
        }

        /// <summary>
        /// 备注.
        /// </summary>
        public String Remark
        {
            get
            {
                return this._Remark;
            }
            set
            {
                this.OnPropertyValueChange(_.Remark, _Remark, value);
                this._Remark = value.SubStr(200);
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public Int32? EmpID
        {
            get
            {
                return this._EmpID;
            }
            set
            {
                this.OnPropertyValueChange(_.EmpID, _EmpID, value);
                this._EmpID = value;
            }
        }

        /// <summary>
        /// 是否需要验证登录限制.
        /// </summary>
        public Boolean? NeedValidate
        {
            get
            {
                return this._NeedValidate;
            }
            set
            {
                this.OnPropertyValueChange(_.NeedValidate, _NeedValidate, value);
                this._NeedValidate = value;
            }
        }

        /// <summary>
        /// 每天使用的开始时间(如9:00).
        /// </summary>
        public String UseTimeBegin
        {
            get
            {
                return this._UseTimeBegin;
            }
            set
            {
                this.OnPropertyValueChange(_.UseTimeBegin, _UseTimeBegin, value);
                this._UseTimeBegin = value.SubStr(50);
            }
        }

        /// <summary>
        /// 每天使用的结束时间(如果18:00).
        /// </summary>
        public String UseTimeOver
        {
            get
            {
                return this._UseTimeOver;
            }
            set
            {
                this.OnPropertyValueChange(_.UseTimeOver, _UseTimeOver, value);
                this._UseTimeOver = value.SubStr(50);
            }
        }

        /// <summary>
        /// 网址Mac地址.
        /// </summary>
        public String MacAddress
        {
            get
            {
                return this._MacAddress;
            }
            set
            {
                this.OnPropertyValueChange(_.MacAddress, _MacAddress, value);
                this._MacAddress = value.SubStr(50);
            }
        }

        /// <summary>
        /// 硬盘序列号.
        /// </summary>
        public String HardDiskSN
        {
            get
            {
                return this._HardDiskSN;
            }
            set
            {
                this.OnPropertyValueChange(_.HardDiskSN, _HardDiskSN, value);
                this._HardDiskSN = value.SubStr(50);
            }
        }

        /// <summary>
        /// 登录次数.
        /// </summary>
        public Int32? SignInTimes
        {
            get
            {
                return this._SignInTimes;
            }
            set
            {
                this.OnPropertyValueChange(_.SignInTimes, _SignInTimes, value);
                this._SignInTimes = value;
            }
        }

        /// <summary>
        /// 最后一次登录时间.
        /// </summary>
        public DateTime? LastSignTime
        {
            get
            {
                return this._LastSignTime;
            }
            set
            {
                this.OnPropertyValueChange(_.LastSignTime, _LastSignTime, value);
                this._LastSignTime = value;
            }
        }

        /// <summary>
        /// 最后一次登录IP.
        /// </summary>
        public String LastSignIP
        {
            get
            {
                return this._LastSignIP;
            }
            set
            {
                this.OnPropertyValueChange(_.LastSignIP, _LastSignIP, value);
                this._LastSignIP = value.SubStr(50);
            }
        }

        /// <summary>
        /// 只能查询某个时间以后的单据.
        /// </summary>
        public DateTime? AfterTimeForBill
        {
            get
            {
                return this._AfterTimeForBill;
            }
            set
            {
                this.OnPropertyValueChange(_.AfterTimeForBill, _AfterTimeForBill, value);
                this._AfterTimeForBill = value;
            }
        }

        /// <summary>
        /// 是否启用(1:禁用，2:启用，4:删除).
        /// </summary>
        public Int32? IsActive
        {
            get
            {
                return this._IsActive;
            }
            set
            {
                this.OnPropertyValueChange(_.IsActive, _IsActive, value);
                this._IsActive = value;
            }
        }

        /// <summary>
        /// 创建时间.
        /// </summary>
        public DateTime? CreatedTime
        {
            get
            {
                return this._CreatedTime;
            }
            set
            {
                this.OnPropertyValueChange(_.CreatedTime, _CreatedTime, value);
                this._CreatedTime = value;
            }
        }

        /// <summary>
        /// 创建人ID.
        /// </summary>
        public Int32? CreatedByID
        {
            get
            {
                return this._CreatedByID;
            }
            set
            {
                this.OnPropertyValueChange(_.CreatedByID, _CreatedByID, value);
                this._CreatedByID = value;
            }
        }

        /// <summary>
        /// 创建人名称.
        /// </summary>
        public String CreatedByName
        {
            get
            {
                return this._CreatedByName;
            }
            set
            {
                this.OnPropertyValueChange(_.CreatedByName, _CreatedByName, value);
                this._CreatedByName = value.SubStr(50);
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public Boolean? IsDeleted
        {
            get
            {
                return this._IsDeleted;
            }
            set
            {
                this.OnPropertyValueChange(_.IsDeleted, _IsDeleted, value);
                this._IsDeleted = value;
            }
        }

        #endregion
        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override Table GetTable()
        {
            return new Table<SYS_UserAccount>("SYS_UserAccount");
        }

        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override Field GetIdentityField()
        {
            return _.UserID;
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.UserID
			};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override Field[] GetFields()
        {
            return new Field[] {
				_.UserID,		
				_.UserGUID,		
				_.GCompanyID,		
				_.Account,		
				_.PWD,		
				_.Remark,		
				_.EmpID,		
				_.NeedValidate,		
				_.UseTimeBegin,		
				_.UseTimeOver,		
				_.MacAddress,		
				_.HardDiskSN,		
				_.SignInTimes,		
				_.LastSignTime,		
				_.LastSignIP,		
				_.AfterTimeForBill,		
				_.IsActive,		
				_.CreatedTime,		
				_.CreatedByID,		
				_.CreatedByName,		
				_.IsDeleted		
			};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
				this._UserID,		
				this._UserGUID,		
				this._GCompanyID,		
				this._Account,		
				this._PWD,		
				this._Remark,		
				this._EmpID,		
				this._NeedValidate,		
				this._UseTimeBegin,		
				this._UseTimeOver,		
				this._MacAddress,		
				this._HardDiskSN,		
				this._SignInTimes,		
				this._LastSignTime,		
				this._LastSignIP,		
				this._AfterTimeForBill,		
				this._IsActive,		
				this._CreatedTime,		
				this._CreatedByID,		
				this._CreatedByName,		
				this._IsDeleted		
			};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.UserID)))
            {
                this._UserID = reader.GetInt32(_.UserID);
            }
            if ((false == reader.IsDBNull(_.UserGUID)))
            {
                this._UserGUID = reader.GetGuid(_.UserGUID);
            }
            if ((false == reader.IsDBNull(_.GCompanyID)))
            {
                this._GCompanyID = reader.GetGuid(_.GCompanyID);
            }
            if ((false == reader.IsDBNull(_.Account)))
            {
                this._Account = reader.GetString(_.Account);
            }
            if ((false == reader.IsDBNull(_.PWD)))
            {
                this._PWD = reader.GetString(_.PWD);
            }
            if ((false == reader.IsDBNull(_.Remark)))
            {
                this._Remark = reader.GetString(_.Remark);
            }
            if ((false == reader.IsDBNull(_.EmpID)))
            {
                this._EmpID = reader.GetInt32(_.EmpID);
            }
            if ((false == reader.IsDBNull(_.NeedValidate)))
            {
                this._NeedValidate = reader.GetBoolean(_.NeedValidate);
            }
            if ((false == reader.IsDBNull(_.UseTimeBegin)))
            {
                this._UseTimeBegin = reader.GetString(_.UseTimeBegin);
            }
            if ((false == reader.IsDBNull(_.UseTimeOver)))
            {
                this._UseTimeOver = reader.GetString(_.UseTimeOver);
            }
            if ((false == reader.IsDBNull(_.MacAddress)))
            {
                this._MacAddress = reader.GetString(_.MacAddress);
            }
            if ((false == reader.IsDBNull(_.HardDiskSN)))
            {
                this._HardDiskSN = reader.GetString(_.HardDiskSN);
            }
            if ((false == reader.IsDBNull(_.SignInTimes)))
            {
                this._SignInTimes = reader.GetInt32(_.SignInTimes);
            }
            if ((false == reader.IsDBNull(_.LastSignTime)))
            {
                this._LastSignTime = reader.GetDateTime(_.LastSignTime);
            }
            if ((false == reader.IsDBNull(_.LastSignIP)))
            {
                this._LastSignIP = reader.GetString(_.LastSignIP);
            }
            if ((false == reader.IsDBNull(_.AfterTimeForBill)))
            {
                this._AfterTimeForBill = reader.GetDateTime(_.AfterTimeForBill);
            }
            if ((false == reader.IsDBNull(_.IsActive)))
            {
                this._IsActive = reader.GetInt32(_.IsActive);
            }
            if ((false == reader.IsDBNull(_.CreatedTime)))
            {
                this._CreatedTime = reader.GetDateTime(_.CreatedTime);
            }
            if ((false == reader.IsDBNull(_.CreatedByID)))
            {
                this._CreatedByID = reader.GetInt32(_.CreatedByID);
            }
            if ((false == reader.IsDBNull(_.CreatedByName)))
            {
                this._CreatedByName = reader.GetString(_.CreatedByName);
            }
            if ((false == reader.IsDBNull(_.IsDeleted)))
            {
                this._IsDeleted = reader.GetBoolean(_.IsDeleted);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(SYS_UserAccount).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static AllField All = new AllField<SYS_UserAccount>();

            /// <summary>
            /// 用户ID - 字段名：UserID - 数据类型：Int32?
            /// </summary>
            public static Field UserID = new Field<SYS_UserAccount>("UserID");
            /// <summary>
            /// 用户UGID - 字段名：UserGUID - 数据类型：Guid?
            /// </summary>
            public static Field UserGUID = new Field<SYS_UserAccount>("UserGUID");
            /// <summary>
            /// 唯一标识 - 字段名：GCompanyID - 数据类型：Guid?
            /// </summary>
            public static Field GCompanyID = new Field<SYS_UserAccount>("GCompanyID");
            /// <summary>
            /// 登录帐号 - 字段名：Account - 数据类型：String
            /// </summary>
            public static Field Account = new Field<SYS_UserAccount>("Account");
            /// <summary>
            /// 用户密码 - 字段名：PWD - 数据类型：String
            /// </summary>
            public static Field PWD = new Field<SYS_UserAccount>("PWD");
            /// <summary>
            /// 备注 - 字段名：Remark - 数据类型：String
            /// </summary>
            public static Field Remark = new Field<SYS_UserAccount>("Remark");
            /// <summary>
            ///  - 字段名：EmpID - 数据类型：Int32?
            /// </summary>
            public static Field EmpID = new Field<SYS_UserAccount>("EmpID");
            /// <summary>
            /// 是否需要验证登录限制 - 字段名：NeedValidate - 数据类型：Boolean?
            /// </summary>
            public static Field NeedValidate = new Field<SYS_UserAccount>("NeedValidate");
            /// <summary>
            /// 每天使用的开始时间(如9:00) - 字段名：UseTimeBegin - 数据类型：String
            /// </summary>
            public static Field UseTimeBegin = new Field<SYS_UserAccount>("UseTimeBegin");
            /// <summary>
            /// 每天使用的结束时间(如果18:00) - 字段名：UseTimeOver - 数据类型：String
            /// </summary>
            public static Field UseTimeOver = new Field<SYS_UserAccount>("UseTimeOver");
            /// <summary>
            /// 网址Mac地址 - 字段名：MacAddress - 数据类型：String
            /// </summary>
            public static Field MacAddress = new Field<SYS_UserAccount>("MacAddress");
            /// <summary>
            /// 硬盘序列号 - 字段名：HardDiskSN - 数据类型：String
            /// </summary>
            public static Field HardDiskSN = new Field<SYS_UserAccount>("HardDiskSN");
            /// <summary>
            /// 登录次数 - 字段名：SignInTimes - 数据类型：Int32?
            /// </summary>
            public static Field SignInTimes = new Field<SYS_UserAccount>("SignInTimes");
            /// <summary>
            /// 最后一次登录时间 - 字段名：LastSignTime - 数据类型：DateTime?
            /// </summary>
            public static Field LastSignTime = new Field<SYS_UserAccount>("LastSignTime");
            /// <summary>
            /// 最后一次登录IP - 字段名：LastSignIP - 数据类型：String
            /// </summary>
            public static Field LastSignIP = new Field<SYS_UserAccount>("LastSignIP");
            /// <summary>
            /// 只能查询某个时间以后的单据 - 字段名：AfterTimeForBill - 数据类型：DateTime?
            /// </summary>
            public static Field AfterTimeForBill = new Field<SYS_UserAccount>("AfterTimeForBill");
            /// <summary>
            /// 是否启用(1:禁用，2:启用，4:删除) - 字段名：IsActive - 数据类型：Int32?
            /// </summary>
            public static Field IsActive = new Field<SYS_UserAccount>("IsActive");
            /// <summary>
            /// 创建时间 - 字段名：CreatedTime - 数据类型：DateTime?
            /// </summary>
            public static Field CreatedTime = new Field<SYS_UserAccount>("CreatedTime");
            /// <summary>
            /// 创建人ID - 字段名：CreatedByID - 数据类型：Int32?
            /// </summary>
            public static Field CreatedByID = new Field<SYS_UserAccount>("CreatedByID");
            /// <summary>
            /// 创建人名称 - 字段名：CreatedByName - 数据类型：String
            /// </summary>
            public static Field CreatedByName = new Field<SYS_UserAccount>("CreatedByName");
            /// <summary>
            ///  - 字段名：IsDeleted - 数据类型：Boolean?
            /// </summary>
            public static Field IsDeleted = new Field<SYS_UserAccount>("IsDeleted");
        }
    }
}
