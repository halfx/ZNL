//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by CodeSmith Template.
//
//     Creater: Administrator
//     Date:    2015/1/6
//     Time:    10:11
//     Version: 4.0.0.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

/// <summary>
/// CodeSmith自动生成的实体
/// </summary>
namespace ZNLCRM.Entity.DBModel
{
    using System;
    using MySoft.Data;
    using ZNLCRM.Utility;
    using ZNLFrame.Entity;
    /// <summary>
    /// 表名：WF_FunLine 主键列：WF_FunLineID
    /// </summary>
    [SerializableAttribute()]
    public partial class WF_FunLine : BaseEntity
    {
        #region Private Properties

        private Int32 _WF_FunLineID;
        private Guid? _WF_FunLineGuid;
        private Guid? _WF_FunGuid;
        private Guid? _GCompanyID;
        private String _TableName;
        private String _FieldName;
        private String _OperationChar;
        private String _FieldValue;
        private String _AndOr;
        private Int32? _SeqNo;
        private String _GroupNo;
        private Boolean? _IsDeleted;

        #endregion

        #region Public Properties

        /// <summary>
        /// 明细ID.
        /// </summary>
        public Int32 WF_FunLineID
        {
            get
            {
                return _WF_FunLineID;
            }
            set
            {
                this.OnPropertyValueChange(_.WF_FunLineID, _WF_FunLineID, value);
                this._WF_FunLineID = value;
            }
        }

        /// <summary>
        /// 明细GUID.
        /// </summary>
        public Guid? WF_FunLineGuid
        {
            get
            {
                return this._WF_FunLineGuid;
            }
            set
            {
                this.OnPropertyValueChange(_.WF_FunLineGuid, _WF_FunLineGuid, value);
                this._WF_FunLineGuid = value;
            }
        }

        /// <summary>
        /// 主单GUID.
        /// </summary>
        public Guid? WF_FunGuid
        {
            get
            {
                return this._WF_FunGuid;
            }
            set
            {
                this.OnPropertyValueChange(_.WF_FunGuid, _WF_FunGuid, value);
                this._WF_FunGuid = value;
            }
        }

        /// <summary>
        /// 公司ID.
        /// </summary>
        public Guid? GCompanyID
        {
            get
            {
                return this._GCompanyID;
            }
            set
            {
                this.OnPropertyValueChange(_.GCompanyID, _GCompanyID, value);
                this._GCompanyID = value;
            }
        }

        /// <summary>
        /// 关联表名.
        /// </summary>
        public String TableName
        {
            get
            {
                return this._TableName;
            }
            set
            {
                this.OnPropertyValueChange(_.TableName, _TableName, value);
                this._TableName = value.SubStr(120);
            }
        }

        /// <summary>
        /// 关联字段名.
        /// </summary>
        public String FieldName
        {
            get
            {
                return this._FieldName;
            }
            set
            {
                this.OnPropertyValueChange(_.FieldName, _FieldName, value);
                this._FieldName = value.SubStr(200);
            }
        }

        /// <summary>
        /// 操作符.
        /// </summary>
        public String OperationChar
        {
            get
            {
                return this._OperationChar;
            }
            set
            {
                this.OnPropertyValueChange(_.OperationChar, _OperationChar, value);
                this._OperationChar = value.SubStr(50);
            }
        }

        /// <summary>
        /// 字段值.
        /// </summary>
        public String FieldValue
        {
            get
            {
                return this._FieldValue;
            }
            set
            {
                this.OnPropertyValueChange(_.FieldValue, _FieldValue, value);
                this._FieldValue = value.SubStr(500);
            }
        }

        /// <summary>
        /// 并且或者.
        /// </summary>
        public String AndOr
        {
            get
            {
                return this._AndOr;
            }
            set
            {
                this.OnPropertyValueChange(_.AndOr, _AndOr, value);
                this._AndOr = value.SubStr(50);
            }
        }

        /// <summary>
        /// .
        /// </summary>
        public Int32? SeqNo
        {
            get
            {
                return this._SeqNo;
            }
            set
            {
                this.OnPropertyValueChange(_.SeqNo, _SeqNo, value);
                this._SeqNo = value;
            }
        }

        /// <summary>
        /// 组别(第一组,第二组....).
        /// </summary>
        public String GroupNo
        {
            get
            {
                return this._GroupNo;
            }
            set
            {
                this.OnPropertyValueChange(_.GroupNo, _GroupNo, value);
                this._GroupNo = value.SubStr(20);
            }
        }

        /// <summary>
        /// 是否删除.
        /// </summary>
        public Boolean? IsDeleted
        {
            get
            {
                return this._IsDeleted;
            }
            set
            {
                this.OnPropertyValueChange(_.IsDeleted, _IsDeleted, value);
                this._IsDeleted = value;
            }
        }

        #endregion
        /// <summary>
        /// 获取实体对应的表名
        /// </summary>
        protected override Table GetTable()
        {
            return new Table<WF_FunLine>("WF_FunLine");
        }

        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        protected override Field GetIdentityField()
        {
            return _.WF_FunLineID;
        }

        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        protected override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.WF_FunLineID
			};
        }

        /// <summary>
        /// 获取列信息
        /// </summary>
        protected override Field[] GetFields()
        {
            return new Field[] {
				_.WF_FunLineID,		
				_.WF_FunLineGuid,		
				_.WF_FunGuid,		
				_.GCompanyID,		
				_.TableName,		
				_.FieldName,		
				_.OperationChar,		
				_.FieldValue,		
				_.AndOr,		
				_.SeqNo,		
				_.GroupNo,		
				_.IsDeleted		
			};
        }

        /// <summary>
        /// 获取列数据
        /// </summary>
        protected override object[] GetValues()
        {
            return new object[] {
				this._WF_FunLineID,		
				this._WF_FunLineGuid,		
				this._WF_FunGuid,		
				this._GCompanyID,		
				this._TableName,		
				this._FieldName,		
				this._OperationChar,		
				this._FieldValue,		
				this._AndOr,		
				this._SeqNo,		
				this._GroupNo,		
				this._IsDeleted		
			};
        }

        /// <summary>
        /// 给当前实体赋值
        /// </summary>
        protected override void SetValues(IRowReader reader)
        {
            if ((false == reader.IsDBNull(_.WF_FunLineID)))
            {
                this._WF_FunLineID = reader.GetInt32(_.WF_FunLineID);
            }
            if ((false == reader.IsDBNull(_.WF_FunLineGuid)))
            {
                this._WF_FunLineGuid = reader.GetGuid(_.WF_FunLineGuid);
            }
            if ((false == reader.IsDBNull(_.WF_FunGuid)))
            {
                this._WF_FunGuid = reader.GetGuid(_.WF_FunGuid);
            }
            if ((false == reader.IsDBNull(_.GCompanyID)))
            {
                this._GCompanyID = reader.GetGuid(_.GCompanyID);
            }
            if ((false == reader.IsDBNull(_.TableName)))
            {
                this._TableName = reader.GetString(_.TableName);
            }
            if ((false == reader.IsDBNull(_.FieldName)))
            {
                this._FieldName = reader.GetString(_.FieldName);
            }
            if ((false == reader.IsDBNull(_.OperationChar)))
            {
                this._OperationChar = reader.GetString(_.OperationChar);
            }
            if ((false == reader.IsDBNull(_.FieldValue)))
            {
                this._FieldValue = reader.GetString(_.FieldValue);
            }
            if ((false == reader.IsDBNull(_.AndOr)))
            {
                this._AndOr = reader.GetString(_.AndOr);
            }
            if ((false == reader.IsDBNull(_.SeqNo)))
            {
                this._SeqNo = reader.GetInt32(_.SeqNo);
            }
            if ((false == reader.IsDBNull(_.GroupNo)))
            {
                this._GroupNo = reader.GetString(_.GroupNo);
            }
            if ((false == reader.IsDBNull(_.IsDeleted)))
            {
                this._IsDeleted = reader.GetBoolean(_.IsDeleted);
            }
        }

        public override int GetHashCode()
        {
            return base.GetHashCode();
        }

        public override bool Equals(object obj)
        {
            if ((obj == null))
            {
                return false;
            }
            if ((false == typeof(WF_FunLine).IsAssignableFrom(obj.GetType())))
            {
                return false;
            }
            if ((((object)(this)) == ((object)(obj))))
            {
                return true;
            }
            return false;
        }

        public class _
        {

            /// <summary>
            /// 表示选择所有列，与*等同
            /// </summary>
            public static AllField All = new AllField<WF_FunLine>();

            /// <summary>
            /// 明细ID - 字段名：WF_FunLineID - 数据类型：Int32?
            /// </summary>
            public static Field WF_FunLineID = new Field<WF_FunLine>("WF_FunLineID");
            /// <summary>
            /// 明细GUID - 字段名：WF_FunLineGuid - 数据类型：Guid?
            /// </summary>
            public static Field WF_FunLineGuid = new Field<WF_FunLine>("WF_FunLineGuid");
            /// <summary>
            /// 主单GUID - 字段名：WF_FunGuid - 数据类型：Guid?
            /// </summary>
            public static Field WF_FunGuid = new Field<WF_FunLine>("WF_FunGuid");
            /// <summary>
            /// 公司ID - 字段名：GCompanyID - 数据类型：Guid?
            /// </summary>
            public static Field GCompanyID = new Field<WF_FunLine>("GCompanyID");
            /// <summary>
            /// 关联表名 - 字段名：TableName - 数据类型：String
            /// </summary>
            public static Field TableName = new Field<WF_FunLine>("TableName");
            /// <summary>
            /// 关联字段名 - 字段名：FieldName - 数据类型：String
            /// </summary>
            public static Field FieldName = new Field<WF_FunLine>("FieldName");
            /// <summary>
            /// 操作符 - 字段名：OperationChar - 数据类型：String
            /// </summary>
            public static Field OperationChar = new Field<WF_FunLine>("OperationChar");
            /// <summary>
            /// 字段值 - 字段名：FieldValue - 数据类型：String
            /// </summary>
            public static Field FieldValue = new Field<WF_FunLine>("FieldValue");
            /// <summary>
            /// 并且或者 - 字段名：AndOr - 数据类型：String
            /// </summary>
            public static Field AndOr = new Field<WF_FunLine>("AndOr");
            /// <summary>
            ///  - 字段名：SeqNo - 数据类型：Int32?
            /// </summary>
            public static Field SeqNo = new Field<WF_FunLine>("SeqNo");
            /// <summary>
            /// 组别(第一组,第二组....) - 字段名：GroupNo - 数据类型：String
            /// </summary>
            public static Field GroupNo = new Field<WF_FunLine>("GroupNo");
            /// <summary>
            /// 是否删除 - 字段名：IsDeleted - 数据类型：Boolean?
            /// </summary>
            public static Field IsDeleted = new Field<WF_FunLine>("IsDeleted");
        }
    }
}
